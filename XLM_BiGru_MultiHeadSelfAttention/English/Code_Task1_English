{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20220,"status":"ok","timestamp":1744618421927,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"ofi3U7-OkPp3","outputId":"5b02d7d0-9f1f-45d8-98f6-15c636fb569f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mndrNC668uQP"},"outputs":[],"source":["# Data Handling\n","import os\n","import re\n","import string\n","import numpy as np\n","import pandas as pd\n","from numpy import array\n","from numpy import asarray\n","from numpy import zeros\n","\n","# NLP Preprocessing\n","# import nltk\n","from tensorflow.keras.preprocessing.text import Tokenizer, one_hot\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","# Machine Learning & Model Evaluation\n","from sklearn.model_selection import train_test_split\n","# from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics import (\n","    classification_report, f1_score, precision_score, recall_score,\n","    confusion_matrix, accuracy_score\n",")\n","# from skmultilearn.adapt import MLkNN\n","\n","# Deep Learning (Keras & TensorFlow)\n","import tensorflow as tf\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import (\n","    Embedding, LSTM, GRU, SimpleRNN, Dense, Dropout, Activation, Concatenate\n",")\n","from tensorflow.keras.optimizers import Adam\n","# from tensorflow.keras.losses import MeanSquaredError\n","from tensorflow.keras.utils import to_categorical\n","\n","# Visualization\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DiVADZM88vsW"},"outputs":[],"source":["d1= pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/training/train_en_l1.csv')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sOqst0Nq8yG6"},"outputs":[],"source":["# Word Pre-Processing\n","\n","def normalize_text(text):\n","  emoji_pattern = re.compile(\"[\"\n","                              u\"\\U0001F600-\\U0001F64F\"  # emoticons\n","                              u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n","                              u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n","                              u\"\\U0001F700-\\U0001F77F\"  # alchemical symbols\n","                              u\"\\U0001F780-\\U0001F7FF\"  # Geometric Shapes Extended\n","                              u\"\\U0001F800-\\U0001F8FF\"  # Supplemental Arrows-C\n","                              u\"\\U0001F900-\\U0001F9FF\"  # Supplemental Symbols and Pictographs\n","                              u\"\\U0001FA00-\\U0001FA6F\"  # Chess Symbols\n","                              u\"\\U0001FA70-\\U0001FAFF\"  # Symbols and Pictographs Extended-A\n","                              u\"\\U00002702-\\U000027B0\"  # Dingbats\n","                              u\"\\U000024C2-\\U0001F251\"\n","                              \"]+\", flags=re.UNICODE)\n","  text = text.lower()\n","  text = re.sub('\\[.*?\\]', ' ', text)\n","  text = re.sub('https?://\\S+|www\\.\\S+', ' ', text)\n","  text = re.sub('<.*?>+', ' ', text)\n","  text = re.sub('[%s]' % re.escape(string.punctuation), ' ', text)\n","  text = re.sub('\\n', ' ', text)\n","  text = re.sub('\\w*\\d\\w*', ' ', text)\n","  text = re.sub('<handle replaced>', '', text)\n","  text = emoji_pattern.sub(r'', text)\n","  return text\n","\n","\n"]},{"cell_type":"code","source":["d1['text'] = d1['text'].apply(lambda x: normalize_text(x))\n","d1"],"metadata":{"id":"uiOT2eSFWXYl"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":164,"status":"ok","timestamp":1744540810269,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"mWgpPVgh823Q","outputId":"6213d7d9-e495-43df-9f47-65c2fe96830b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      label                                               text\n","0         0      this is our history   for shia and sunni  ...\n","1         1     if this is  grilling  then wht wud u call t...\n","2         0    look at  madam  locals attacked  no religion...\n","3         1    our beloved yogi ji has given money home and...\n","4         1   i gonna kill that bitch   bitvj imma kill you...\n","...     ...                                                ...\n","6526      0          “mama let’s research” bitch suck my dick \n","6527      0   i was by myself and it was her and her bitch ...\n","6528      0   i just seen a comment and bitch im cryinnnnnn...\n","6529      1   boys only luxury                             ...\n","6530      0   mfs act like they actions ain’t visible   bit...\n","\n","[6531 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1ac7d07e-0667-44b1-8852-0f5176e73abb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>this is our history   for shia and sunni  ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>if this is  grilling  then wht wud u call t...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>look at  madam  locals attacked  no religion...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>our beloved yogi ji has given money home and...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>i gonna kill that bitch   bitvj imma kill you...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6526</th>\n","      <td>0</td>\n","      <td>“mama let’s research” bitch suck my dick</td>\n","    </tr>\n","    <tr>\n","      <th>6527</th>\n","      <td>0</td>\n","      <td>i was by myself and it was her and her bitch ...</td>\n","    </tr>\n","    <tr>\n","      <th>6528</th>\n","      <td>0</td>\n","      <td>i just seen a comment and bitch im cryinnnnnn...</td>\n","    </tr>\n","    <tr>\n","      <th>6529</th>\n","      <td>1</td>\n","      <td>boys only luxury                             ...</td>\n","    </tr>\n","    <tr>\n","      <th>6530</th>\n","      <td>0</td>\n","      <td>mfs act like they actions ain’t visible   bit...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6531 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ac7d07e-0667-44b1-8852-0f5176e73abb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ac7d07e-0667-44b1-8852-0f5176e73abb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ac7d07e-0667-44b1-8852-0f5176e73abb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1135f9d5-db72-451f-a52a-f2d2bf9ce227\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1135f9d5-db72-451f-a52a-f2d2bf9ce227')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1135f9d5-db72-451f-a52a-f2d2bf9ce227 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5b9d2268-2144-4f64-8cdf-d708323eae1a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('d1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5b9d2268-2144-4f64-8cdf-d708323eae1a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('d1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d1","summary":"{\n  \"name\": \"d1\",\n  \"rows\": 6531,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6512,\n        \"samples\": [\n          \"  let sii apply for full license for covishield  same as bharat biotech is doing for covaxin  you may sue the uk govt if you can \",\n          \" super madam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["X1 = list(d1['text'])\n","# X2 = list(d2['text'])\n","# X3 = list(d3['text'])\n","\n","col_lst = ['en_a1', 'en_a2', 'en_a3', 'en_a4', 'en_a5', 'en_a6']\n","for col in col_lst:\n","    d1[col] = pd.to_numeric(d1[col], errors='coerce')\n","    # d2[col] = pd.to_numeric(d2[col], errors='coerce')\n","    # d3[col] = pd.to_numeric(d3[col], errors='coerce')\n","\n","d1['label'] = d1[col_lst].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","# d2['label'] = d2[col_lst].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","# d3['label'] = d3[col_lst].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","d1 = d1.drop(col_lst, axis=1)\n","# d2 = d2.drop(col_lst, axis=1)\n","# d3 = d3.drop(col_lst, axis=1)\n","\n","d1['label'] = d1['label'].astype(int)\n","# d2['label'] = d2['label'].astype(int)\n","# d3['label'] = d3['label'].astype(int)\n","\n","d1 = d1[['label', 'text']]\n","# d2 = d2[['label', 'text']]\n","# d3 = d3[['label', 'text']]\n","d1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":49,"status":"ok","timestamp":1744540810417,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"l6fD8Ujc8-F8","outputId":"223661a9-2b91-4712-ef04-cc2ba4690752"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 0 ... 0 1 0]\n","6531\n"]}],"source":["y_data1 = d1[\"label\"]\n","# y_data2 = d2[\"label\"]\n","# y_data3 = d3[\"label\"]\n","# # print(y_data)\n","y1 = y_data1.values\n","# y2 = y_data2.values\n","# y3 = y_data3.values\n","print(y1)\n","print(len(y1))\n","# print(y2)\n","# print(len(y2))\n","# print(y3)\n","# print(len(y3))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":70,"status":"ok","timestamp":1744540810487,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"eqcS8s2W-ppD","outputId":"41afb814-0291-468c-c651-37a1cb919965"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1]\n","[5159 1372]\n","3.760204081632653\n"]}],"source":["# y1.#\n","unique_values, counts = np.unique(y1, return_counts=True)\n","print(unique_values)\n","print(counts)\n","print(counts[0]/counts[1])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":186,"status":"ok","timestamp":1744540810673,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"hJNxaadV_ik2","outputId":"431fcb44-4858-405d-b945-a1973c1020c6"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Average Text Length: 103.14132598376972\n","Length 0-10: 112 112\n","Length 10-20: 566 678\n","Length 20-30: 617 1295\n","Length 30-40: 553 1848\n","Length 40-50: 467 2315\n","Length 50-60: 419 2734\n","Length 60-70: 349 3083\n","Length 70-80: 309 3392\n","Length 80-90: 261 3653\n","Length 90-100: 232 3885\n","Length 100-110: 222 4107\n","Length 110-120: 179 4286\n","Length 120-130: 183 4469\n","Length 130-140: 177 4646\n","Length 140-150: 134 4780\n","Length 150-160: 127 4907\n","Length 160-170: 140 5047\n","Length 170-180: 122 5169\n","Length 180-190: 123 5292\n","Length 190-200: 107 5399\n","Length 200-210: 116 5515\n","Length 210-220: 104 5619\n","Length 220-230: 96 5715\n","Length 230-240: 118 5833\n","Length 240-250: 114 5947\n","Length 250-260: 135 6082\n","Length 260-270: 144 6226\n","Length 270-280: 185 6411\n","Length 280-290: 112 6523\n","Length 290-300: 8 6531\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Calculate the lengths of each text element\n","text_lengths = d1['text'].str.len()\n","\n","# Create a histogram with bins of size 10\n","plt.hist(text_lengths, bins=range(0, text_lengths.max() + 10, 10))\n","\n","plt.xlabel('Text Length')\n","plt.ylabel('Frequency')\n","plt.title('Distribution of Text Lengths')\n","plt.show()\n","\n","# Calculate and print the average text length\n","average_length = text_lengths.mean()\n","print(f\"Average Text Length: {average_length}\")\n","\n","# Get counts for each bucket of 10\n","bins = range(0, text_lengths.max() + 10, 10)\n","counts, _ = np.histogram(text_lengths, bins=bins)\n","\n","sum=0\n","# Print the counts for each bucket\n","for i in range(len(bins) - 1):\n","    sum+=counts[i]\n","    print(f\"Length {bins[i]}-{bins[i+1]}: {counts[i]} {sum}\")"]},{"cell_type":"code","source":["# -*- coding: utf-8 -*-\n","import tensorflow as tf\n","from tensorflow.keras.layers import Input, Dense, Bidirectional, GRU, MultiHeadAttention\n","from tensorflow.keras.models import Model\n","from transformers import XLMRobertaTokenizer, TFXLMRobertaModel\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, f1_score\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","\n","# ======================\n","# CONFIGURATION\n","# ======================\n","MAX_LEN = 256  # Reduced for English text\n","BATCH_SIZE = 32\n","EPOCHS = 5\n","LEARNING_RATE = 2e-5\n","VAL_SPLIT = 0.2\n","CLASS_WEIGHT = {0: 1, 1: 3.5}  # Adjusted for English class distribution\n","XLM_MODEL_NAME = 'xlm-roberta-base'\n","\n","# ======================\n","# MODEL ARCHITECTURE\n","# ======================\n","class XLMRobertaEmbedding(tf.keras.layers.Layer):\n","    def __init__(self, model_name, **kwargs):\n","        super().__init__(**kwargs)\n","        self.xlm_model = TFXLMRobertaModel.from_pretrained(model_name)\n","\n","    def call(self, inputs):\n","        input_ids, attention_mask = inputs\n","        return self.xlm_model(\n","            input_ids,\n","            attention_mask=attention_mask,\n","            return_dict=True\n","        ).last_hidden_state\n","\n","def create_model():\n","    input_ids = Input(shape=(MAX_LEN,), dtype=tf.int32, name='input_ids')\n","    attention_mask = Input(shape=(MAX_LEN,), dtype=tf.int32, name='attention_mask')\n","\n","    # XLM-R Embeddings\n","    embeddings = XLMRobertaEmbedding(XLM_MODEL_NAME)([input_ids, attention_mask])\n","\n","    # BiGRU with reduced units for English\n","    gru_out = Bidirectional(GRU(512, return_sequences=True))(embeddings)\n","\n","    # Multi-Head Attention\n","    attention = MultiHeadAttention(num_heads=4, key_dim=64)(gru_out, gru_out)\n","\n","    # Pooling + Classification\n","    pooled = tf.keras.layers.GlobalAveragePooling1D()(attention)\n","    dropout = tf.keras.layers.Dropout(0.2)(pooled)\n","    output = Dense(1, activation='sigmoid')(dropout)\n","\n","    return Model(inputs=[input_ids, attention_mask], outputs=output)\n"],"metadata":{"id":"REwBieS3WzgP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"oYYPlq-0P3Ez"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":596,"referenced_widgets":["2c26d98beb6b46c284fee3603d6f1093","e56c1e58290f4940bff613e50ddec556","d767c5dde57f45c5917c3526222ec486","0354a5bf5224471d9ff17cc779674d1c","4f5e54efa5b645cba0de527c85ba7f0b","8eba7167a6994c03946fa23ed464dabf","7fa40db2470b4f8cb44eb82b6ebf3467","d761e2152af14893bc548d20f6519946","cd376bdf98cc4742ada8d25451488127","7158331d18054142995dd41a6be960d8","fb514aad11374ab782f11d4c8ffb6a8b","2fc25ca09c1542539c63d0128b018fa3","4671990c85014818a7eba25ea00ced09","36f787f16d8a4ceab24d92004a119f2a","2bb5e456515a4d7ba443090ee6ad2670","acb27846c8bf4e2e97414b43fb8b8272","5241aa30bd0d419c89aa6a4d55ea93fd","4e776b5b644d4afd9e15127b055c7d74","33ceec028b6544e191ec3e897128af9a","0a360270396547469fdc329ad57a85e3","b5ea1f76d21b4662a9283e33ba580149","906ef039339e45e58e6658d74dd0c726","8baf594e76a742f38f71e1365f06a395","e60e2cadd0ec4270bc1d8ab84fb1829a","22ff9ce3d00d4694a3388b605a23152a","2649db8ab5a44597adfbb10ce1cf1e54","5352af3d1ef5424d98f2c4f2aca2972e","91d8a15880674091b98ada437a6b83ea","d9b5390949d64603adb69eb83b3dc378","b9d1c27ef17042de999de0dad38d4822","b9b77df4dfe145c7aa95420c8899fce9","3c215ac7c1734542a0106905ad3a47df","25d000fc42ee4fdd88b8a5275ba14cd0","4d6d7e933a984588ac2a54da65127cab","46704849083e4dbabaa07e144843a42d","6a831feae31d4b738c3fba09f36dd5aa","3b546d9d483f4ec0a4c8e8030c226532","86230e390c2e4374b7964534730c1b80","212d0e0e3b624140b92ace2eb4156266","787a57af0fb440f980846b5015c4cfb8","209ee84bfe5a4deaa781bd3ca46ce73a","12aa70d978b8463cb0881aeea94708bc","1dac38ce2e02460f94a88cd88e08c460","8fd8763a4c714d0e9c7ffad9f371cce2","282177cca02a462aa4c4cad4a62dd749","922e7be8a6fd45cc89cb165449033391","8e9f783307124476bdafbd1c4e45a8da","5b13608a4c62491889e623e7d790788b","7009b040befc4389ae81c66284049744","3ddde7d2535f4be5a1abef712b32022b","73d6cbfd61ef47b293b9013a69aa553d","af6f63bcc4764c7dbb59df7817c82701","697a60c68c7e45c0a23a9caddaf43329","05d2765994524f88887afa32e0ed2a0a","697ee38a43af4208bd2babdd5eaf7924"]},"id":"Qt9pw3Yt_c2u","outputId":"c5c40f4d-8e81-43ec-d1f1-7f33dd783b76","executionInfo":{"status":"ok","timestamp":1744541877041,"user_tz":-330,"elapsed":1066367,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/25.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2c26d98beb6b46c284fee3603d6f1093"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["sentencepiece.bpe.model:   0%|          | 0.00/5.07M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2fc25ca09c1542539c63d0128b018fa3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/9.10M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8baf594e76a742f38f71e1365f06a395"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/615 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4d6d7e933a984588ac2a54da65127cab"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n","WARNING:huggingface_hub.file_download:Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n"]},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/1.12G [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"282177cca02a462aa4c4cad4a62dd749"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFXLMRobertaModel: ['lm_head.layer_norm.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.weight', 'lm_head.bias', 'lm_head.dense.bias']\n","- This IS expected if you are initializing TFXLMRobertaModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFXLMRobertaModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFXLMRobertaModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFXLMRobertaModel for predictions without further training.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","\u001b[1m164/164\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m162s\u001b[0m 872ms/step - accuracy: 0.6683 - loss: 1.0628 - val_accuracy: 0.7299 - val_loss: 0.6754\n","Epoch 2/5\n","\u001b[1m164/164\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m200s\u001b[0m 881ms/step - accuracy: 0.6008 - loss: 1.0772 - val_accuracy: 0.7896 - val_loss: 0.6150\n","Epoch 3/5\n","\u001b[1m164/164\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m202s\u001b[0m 882ms/step - accuracy: 0.6846 - loss: 1.0508 - val_accuracy: 0.6679 - val_loss: 0.6773\n","Epoch 4/5\n","\u001b[1m164/164\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m202s\u001b[0m 882ms/step - accuracy: 0.5702 - loss: 1.0541 - val_accuracy: 0.7904 - val_loss: 0.5952\n","Epoch 5/5\n","\u001b[1m164/164\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m202s\u001b[0m 881ms/step - accuracy: 0.6459 - loss: 1.0174 - val_accuracy: 0.6542 - val_loss: 0.6496\n"]}],"source":["# ======================\n","# DATA PREPARATION\n","# ======================\n","# def load_english_data(file_path):\n","#     df = pd.read_csv(file_path)\n","#     df['text'] = df['text'].apply(lambda x: x.lower())  # Basic English preprocessing\n","#     return df\n","\n","# Load dataset (replace with your English data path)\n","english_df = d1\n","\n","# Split data\n","X_train, X_val, y_train, y_val = train_test_split(\n","    english_df['text'].values,\n","    english_df['label'].values,\n","    test_size=VAL_SPLIT,\n","    stratify=english_df['label'],\n","    random_state=42\n",")\n","\n","# Tokenization\n","tokenizer = XLMRobertaTokenizer.from_pretrained(XLM_MODEL_NAME)\n","\n","def preprocess(texts):\n","    return tokenizer(\n","        texts.tolist(),\n","        max_length=MAX_LEN,\n","        truncation=True,\n","        padding='max_length',\n","        return_tensors='tf'\n","    )\n","\n","train_enc = preprocess(X_train)\n","val_enc = preprocess(X_val)\n","\n","# ======================\n","# MODEL TRAINING\n","# ======================\n","model = create_model()\n","model.compile(\n","    optimizer=tf.keras.optimizers.Adam(LEARNING_RATE),\n","    loss='binary_crossentropy',\n","    metrics=['accuracy']\n",")\n","\n","history = model.fit(\n","    {'input_ids': train_enc['input_ids'], 'attention_mask': train_enc['attention_mask']},\n","    y_train,\n","    validation_data=(\n","        {'input_ids': val_enc['input_ids'], 'attention_mask': val_enc['attention_mask']},\n","        y_val\n","    ),\n","    epochs=EPOCHS,\n","    batch_size=BATCH_SIZE,\n","    class_weight=CLASS_WEIGHT\n",")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":41036,"status":"ok","timestamp":1744541918076,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"aYfaa1ASBrMd","outputId":"b6d37cfd-8edf-4f00-e69d-f5e65b0f6013"},"outputs":[{"output_type":"stream","name":"stdout","text":["English Validation Results:\n","\u001b[1m41/41\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 632ms/step\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.91      0.63      0.74      1032\n","           1       0.35      0.75      0.48       275\n","\n","    accuracy                           0.65      1307\n","   macro avg       0.63      0.69      0.61      1307\n","weighted avg       0.79      0.65      0.69      1307\n","\n","F1 Score: 0.6860\n"]}],"source":["\n","# ======================\n","# EVALUATION & VISUALIZATION\n","# ======================\n","def evaluate_model(model, data, true_labels):\n","    y_pred = model.predict(data)\n","    y_pred_labels = (y_pred > 0.5).astype(int)\n","\n","    print(\"\\nClassification Report:\")\n","    print(classification_report(true_labels, y_pred_labels))\n","    print(f\"F1 Score: {f1_score(true_labels, y_pred_labels, average='weighted'):.4f}\")\n","\n","print(\"English Validation Results:\")\n","evaluate_model(model,\n","    {'input_ids': val_enc['input_ids'], 'attention_mask': val_enc['attention_mask']},\n","    y_val\n",")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"executionInfo":{"elapsed":686,"status":"ok","timestamp":1744541918759,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"LXRmHcnKBtSs","outputId":"dea10bae-67ec-4f9f-f359-1a61f998612e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","plt.figure(figsize=(12, 4))\n","plt.subplot(1, 2, 1)\n","plt.plot(history.history['accuracy'], label='Train Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Val Accuracy')\n","plt.title('Accuracy Progress')\n","plt.legend()\n","\n","plt.subplot(1, 2, 2)\n","plt.plot(history.history['loss'], label='Train Loss')\n","plt.plot(history.history['val_loss'], label='Val Loss')\n","plt.title('Loss Progress')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","source":["# Save model (TensorFlow SavedModel format)\n","model.save(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_Model.keras\")\n","\n","# Save tokenizer\n","\n","from transformers import XLMRobertaTokenizer\n","\n","# Save tokenizer in a dedicated directory\n","tokenizer.save_pretrained(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1yCJUAyzugi6","executionInfo":{"status":"ok","timestamp":1744542084262,"user_tz":-330,"elapsed":558,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"outputId":"cd21e114-3200-4300-8428-e27cd670865c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer/tokenizer_config.json',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer/special_tokens_map.json',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer/sentencepiece.bpe.model',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer/added_tokens.json')"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["Testing\n"],"metadata":{"id":"dTe9PlUF1RjF"}},{"cell_type":"code","source":["import tensorflow as tf\n","from transformers import XLMRobertaTokenizer\n","\n","# Load model with custom layer handling\n","loaded_model = tf.keras.models.load_model(\n","    \"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_Model.keras\",\n","    custom_objects={'XLMRobertaEmbedding': XLMRobertaEmbedding}\n",")\n","\n","# Load tokenizer\n","tokenizer1 = XLMRobertaTokenizer.from_pretrained(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/English/Task1_tokenizer\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":327,"referenced_widgets":["e50a9d4603414e75a1d45f7a3174a1f9","7315431fc99044269049eee821f1a05b","f3b586923c61457ebc8e7609cdd404ee","85d3e597232247d9881fff4d0b4f9136","b2aac20cfc6248099a8cc966ee827376","ad2be94b0c6e4d6692444ebead647e20","d8565ff1ef8b403490e3fd6f5edb1014","d7f631618a90432ba45242c8937facac","41b6520c8375458d8cd93ca9d1560df9","78004890cf864769a85da61875212e58","22060bea89b249649c92a293c4395f0e","ca42519b061144979e711dd0a1f5ef5a","59bfb01595f344e288f7f8b90df5c561","2a54d0f2cace4badb3bc8d7d586712aa","5a345f0345204906a2dd60b9c3917587","10c40ea8165c4c8b87f9503944841638","489552decb5f493580f3fd3097a75491","2dbcf7e4cad24e4d87080c21b8d8b26d","f5540a1ecbf2437498969558cdf7f2a1","1a1d9f0ce2dd4fb583db45a67a45503c","f73f02251db544e2afa39c2896d0995a","71a53bc923a54c749e338a24efb62bc6"]},"id":"KRCXMpYNuqF5","executionInfo":{"status":"ok","timestamp":1744618483970,"user_tz":-330,"elapsed":57105,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"outputId":"68fbc3a7-b390-4d21-e9b1-e3a1ef542136"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/615 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e50a9d4603414e75a1d45f7a3174a1f9"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n","WARNING:huggingface_hub.file_download:Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n"]},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/1.12G [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ca42519b061144979e711dd0a1f5ef5a"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFXLMRobertaModel: ['lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.bias', 'lm_head.bias']\n","- This IS expected if you are initializing TFXLMRobertaModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFXLMRobertaModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFXLMRobertaModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFXLMRobertaModel for predictions without further training.\n"]}]},{"cell_type":"code","source":["vv_1= pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/testing/test_en_l1.csv')\n","vv1=vv_1\n"],"metadata":{"id":"BQ16utRbVO-5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vv_1['text'] = vv_1['text'].apply(lambda x: normalize_text(x))\n","\n","# vv['text'] = vv['text'].apply(lambda x: normalize_text_2(x))\n","vv_1 = vv_1[['text']]\n","\n","vv_1.columns = ['text']\n","vv_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"hVp3OPx9VZ83","executionInfo":{"status":"ok","timestamp":1744618485136,"user_tz":-330,"elapsed":153,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"outputId":"42d94771-32bc-46d7-fe65-9afde31537b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   text\n","0      who s this tweet about  bitch it s about you ...\n","1      alkalamba should’ve used her slippers to slap...\n","2      coronavillains   covididiot      is a      do...\n","3      acts      like the female  governors  of stat...\n","4        let us celebrate “secular” as a beautiful w...\n","...                                                 ...\n","1102  you should be tired of not having any kind of ...\n","1103  “the limits of tyrants are prescribed by the e...\n","1104   like wtf my symbol is   and i’m a crab and we...\n","1105    marry a millionaire guy  divorce get half hi...\n","1106        slim could take over the world   pussypower\n","\n","[1107 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-bb52bc6b-34f3-4fc8-9f8e-2f3d7b0d8217\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>who s this tweet about  bitch it s about you ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alkalamba should’ve used her slippers to slap...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>coronavillains   covididiot      is a      do...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>acts      like the female  governors  of stat...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>let us celebrate “secular” as a beautiful w...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1102</th>\n","      <td>you should be tired of not having any kind of ...</td>\n","    </tr>\n","    <tr>\n","      <th>1103</th>\n","      <td>“the limits of tyrants are prescribed by the e...</td>\n","    </tr>\n","    <tr>\n","      <th>1104</th>\n","      <td>like wtf my symbol is   and i’m a crab and we...</td>\n","    </tr>\n","    <tr>\n","      <th>1105</th>\n","      <td>marry a millionaire guy  divorce get half hi...</td>\n","    </tr>\n","    <tr>\n","      <th>1106</th>\n","      <td>slim could take over the world   pussypower</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1107 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb52bc6b-34f3-4fc8-9f8e-2f3d7b0d8217')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bb52bc6b-34f3-4fc8-9f8e-2f3d7b0d8217 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bb52bc6b-34f3-4fc8-9f8e-2f3d7b0d8217');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a51ca2f-8f42-4f8c-9192-d3eca4f88bd9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a51ca2f-8f42-4f8c-9192-d3eca4f88bd9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a51ca2f-8f42-4f8c-9192-d3eca4f88bd9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b6582c5e-5a9c-4682-9015-307800229de7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('vv_1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b6582c5e-5a9c-4682-9015-307800229de7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('vv_1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"vv_1","summary":"{\n  \"name\": \"vv_1\",\n  \"rows\": 1107,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1107,\n        \"samples\": [\n          \" pissfull snakes  traitors\",\n          \"had to cut that hoe off cause the bitch was steady bitchin\",\n          \"       so    options  either there is no rule of law in india or that you re lying either knowingly or unknowingly  under option    feel free to leave  under option    stop lying \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# X = list(vv1['text'])\n","#y = np.asarray(d1[d1.columns[1:]])\n","col_lst = ['en_a1', 'en_a2', 'en_a3', 'en_a4', 'en_a5', 'en_a6']\n","for col in col_lst:\n","    vv1[col] = pd.to_numeric(vv1[col], errors='coerce')\n","\n","\n","\n","vv1['label'] = vv1[col_lst].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","\n","vv1['label'] = vv1['label'].astype(int)\n","\n","\n","vv1 = vv1[['label', 'text']]\n","\n","\n","true_1 = vv1[\"label\"]\n","\n","# print(true_)\n","y_test_1 = true_1.values\n","\n","print(y_test_1)\n","print(len(y_test_1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7w5FBIBXzwy","executionInfo":{"status":"ok","timestamp":1744618608865,"user_tz":-330,"elapsed":48,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"outputId":"0c4af87d-baa8-479f-db18-fe171204a085"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 0 1 ... 1 1 1]\n","1107\n"]}]},{"cell_type":"code","source":["X_test=vv1['text'].values\n","y_test=vv1['label'].values"],"metadata":{"id":"w04TULBvXRS1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# sequence1 = tokenizer1.texts_to_sequences(vv_1['text']) # same tokenizer which is used on train data.\n","\n","def preprocess(texts):\n","    return tokenizer1(\n","        texts.tolist(),\n","        max_length=MAX_LEN,\n","        truncation=True,\n","        padding='max_length',\n","        return_tensors='tf'\n","    )"],"metadata":{"id":"K30LeZHjVheq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_enc = preprocess(X_test)\n"],"metadata":{"id":"PYSKhGpPXPZi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# predictions1 = loaded_model.predict(test_enc)\n","# classes1 = np.argmax(predictions1, axis=1)"],"metadata":{"id":"dkCvcuScYDON"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# def evaluate_model(model, data, true_labels):\n","#     y_pred = model.predict(data)\n","#     y_pred_labels = (y_pred > 0.5).astype(int)\n","\n","#     print(\"\\nClassification Report:\")\n","#     print(classification_report(true_labels, y_pred_labels))\n","#     print(f\"F1 Score: {f1_score(true_labels, y_pred_labels, average='weighted'):.4f}\")\n","\n","# print(\"English Validation Results:\")\n","# evaluate_model(model,\n","#     {'input_ids': val_enc['input_ids'], 'attention_mask': val_enc['attention_mask']},\n","#     y_val\n","# )\n"],"metadata":{"id":"BbPxvNqpVw5c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, f1_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import precision_recall_curve\n","\n","# ======================\n","# PREDICTION & EVALUATION\n","# ======================\n","def evaluate_model(model, data, true_labels):\n","    # Get predictions\n","    y_pred_probs = model.predict({\n","        'input_ids': data['input_ids'],\n","        'attention_mask': data['attention_mask']\n","    })\n","\n","    # Find optimal threshold\n","    precision, recall, thresholds = precision_recall_curve(true_labels, y_pred_probs)\n","    f1_scores = 2 * (precision * recall) / (precision + recall + 1e-9)\n","    best_threshold = thresholds[np.argmax(f1_scores)]\n","\n","    # Apply threshold\n","    y_pred = (y_pred_probs > best_threshold).astype(int)\n","\n","    # Metrics\n","    print(f\"\\nBest Threshold: {best_threshold:.4f}\")\n","    print(classification_report(true_labels, y_pred, target_names=['Neutral', 'Abuse']))\n","    print(f\"Weighted F1: {f1_score(true_labels, y_pred, average='weighted'):.4f}\")\n","\n","    # Confusion Matrix\n","    cm = confusion_matrix(true_labels, y_pred)\n","    plt.figure(figsize=(6,4))\n","    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n","                xticklabels=['Neutral', 'Abuse'],\n","                yticklabels=['Neutral', 'Abuse'])\n","    plt.xlabel('Predicted')\n","    plt.ylabel('True')\n","    plt.title('Confusion Matrix')\n","    plt.show()\n","\n","print(\"Test Set Evaluation:\")\n","evaluate_model(loaded_model, test_enc, y_test)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":653},"id":"So8fdwInV_d6","executionInfo":{"status":"ok","timestamp":1744623092920,"user_tz":-330,"elapsed":1162547,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"outputId":"96a4b246-c29b-49f9-c7eb-1a78e27b40d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Set Evaluation:\n","\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1113s\u001b[0m 31s/step\n","\n","Best Threshold: 0.4704\n","              precision    recall  f1-score   support\n","\n","     Neutral       0.78      0.57      0.66       633\n","       Abuse       0.58      0.79      0.67       474\n","\n","    accuracy                           0.66      1107\n","   macro avg       0.68      0.68      0.66      1107\n","weighted avg       0.69      0.66      0.66      1107\n","\n","Weighted F1: 0.6614\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, f1_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import precision_recall_curve\n","\n","\n","\n","# ======================\n","# SAMPLE PREDICTIONS\n","# ======================\n","def show_predictions(texts, labels, num_samples=5):\n","    indices = np.random.choice(len(texts), num_samples, replace=False)\n","    for idx in indices:\n","        text = texts[idx]\n","        true_label = labels[idx]\n","\n","        inputs = tokenizer1(\n","            text,\n","            max_length=MAX_LEN,\n","            truncation=True,\n","            padding='max_length',\n","            return_tensors='tf'\n","        )\n","        pred_prob = loaded_model.predict([inputs['input_ids'], inputs['attention_mask']])[0][0]\n","        pred_label = \"Abuse\" if pred_prob > 0.5 else \"Neutral\"\n","\n","        print(f\"\\nText: {text[:100]}...\")\n","        print(f\"True: {true_label} | Predicted: {pred_label} ({pred_prob:.4f})\")\n","\n","print(\"\\nSample Predictions:\")\n","show_predictions(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"outputId":"dd91481e-c655-4b12-c5f8-ef24a83ee91e","id":"1iRkF3ilklRU","executionInfo":{"status":"ok","timestamp":1744626066339,"user_tz":-330,"elapsed":21518,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Sample Predictions:\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 9s/step\n","\n","Text: if i could talk to dream for   seconds i wouldnt tell him how much i love him the only words coming ...\n","True: 1 | Predicted: Abuse (0.5863)\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3s/step\n","\n","Text: high time these illegal pissfull pigs are kicked out for good ...\n","True: 0 | Predicted: Abuse (0.5819)\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\n","\n","Text:  nia is hot beautiful sexiest actress...\n","True: 1 | Predicted: Abuse (0.6748)\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\n","\n","Text:  really  the bee game calms me down   cumulonimbus clouds are cool  i don’t know how to say that wor...\n","True: 1 | Predicted: Abuse (0.5687)\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\n","\n","Text:  hi suchitra  have a very happy birthday and  if you like reading  my inspiring book about an animal...\n","True: 0 | Predicted: Neutral (0.4382)\n"]}]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"2c26d98beb6b46c284fee3603d6f1093":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e56c1e58290f4940bff613e50ddec556","IPY_MODEL_d767c5dde57f45c5917c3526222ec486","IPY_MODEL_0354a5bf5224471d9ff17cc779674d1c"],"layout":"IPY_MODEL_4f5e54efa5b645cba0de527c85ba7f0b"}},"e56c1e58290f4940bff613e50ddec556":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8eba7167a6994c03946fa23ed464dabf","placeholder":"​","style":"IPY_MODEL_7fa40db2470b4f8cb44eb82b6ebf3467","value":"tokenizer_config.json: 100%"}},"d767c5dde57f45c5917c3526222ec486":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d761e2152af14893bc548d20f6519946","max":25,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cd376bdf98cc4742ada8d25451488127","value":25}},"0354a5bf5224471d9ff17cc779674d1c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7158331d18054142995dd41a6be960d8","placeholder":"​","style":"IPY_MODEL_fb514aad11374ab782f11d4c8ffb6a8b","value":" 25.0/25.0 [00:00&lt;00:00, 1.77kB/s]"}},"4f5e54efa5b645cba0de527c85ba7f0b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8eba7167a6994c03946fa23ed464dabf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7fa40db2470b4f8cb44eb82b6ebf3467":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d761e2152af14893bc548d20f6519946":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cd376bdf98cc4742ada8d25451488127":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7158331d18054142995dd41a6be960d8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb514aad11374ab782f11d4c8ffb6a8b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2fc25ca09c1542539c63d0128b018fa3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4671990c85014818a7eba25ea00ced09","IPY_MODEL_36f787f16d8a4ceab24d92004a119f2a","IPY_MODEL_2bb5e456515a4d7ba443090ee6ad2670"],"layout":"IPY_MODEL_acb27846c8bf4e2e97414b43fb8b8272"}},"4671990c85014818a7eba25ea00ced09":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5241aa30bd0d419c89aa6a4d55ea93fd","placeholder":"​","style":"IPY_MODEL_4e776b5b644d4afd9e15127b055c7d74","value":"sentencepiece.bpe.model: 100%"}},"36f787f16d8a4ceab24d92004a119f2a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_33ceec028b6544e191ec3e897128af9a","max":5069051,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0a360270396547469fdc329ad57a85e3","value":5069051}},"2bb5e456515a4d7ba443090ee6ad2670":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b5ea1f76d21b4662a9283e33ba580149","placeholder":"​","style":"IPY_MODEL_906ef039339e45e58e6658d74dd0c726","value":" 5.07M/5.07M [00:00&lt;00:00, 10.4MB/s]"}},"acb27846c8bf4e2e97414b43fb8b8272":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5241aa30bd0d419c89aa6a4d55ea93fd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4e776b5b644d4afd9e15127b055c7d74":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"33ceec028b6544e191ec3e897128af9a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0a360270396547469fdc329ad57a85e3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b5ea1f76d21b4662a9283e33ba580149":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"906ef039339e45e58e6658d74dd0c726":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8baf594e76a742f38f71e1365f06a395":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e60e2cadd0ec4270bc1d8ab84fb1829a","IPY_MODEL_22ff9ce3d00d4694a3388b605a23152a","IPY_MODEL_2649db8ab5a44597adfbb10ce1cf1e54"],"layout":"IPY_MODEL_5352af3d1ef5424d98f2c4f2aca2972e"}},"e60e2cadd0ec4270bc1d8ab84fb1829a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_91d8a15880674091b98ada437a6b83ea","placeholder":"​","style":"IPY_MODEL_d9b5390949d64603adb69eb83b3dc378","value":"tokenizer.json: 100%"}},"22ff9ce3d00d4694a3388b605a23152a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b9d1c27ef17042de999de0dad38d4822","max":9096718,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b9b77df4dfe145c7aa95420c8899fce9","value":9096718}},"2649db8ab5a44597adfbb10ce1cf1e54":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3c215ac7c1734542a0106905ad3a47df","placeholder":"​","style":"IPY_MODEL_25d000fc42ee4fdd88b8a5275ba14cd0","value":" 9.10M/9.10M [00:00&lt;00:00, 17.9MB/s]"}},"5352af3d1ef5424d98f2c4f2aca2972e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"91d8a15880674091b98ada437a6b83ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d9b5390949d64603adb69eb83b3dc378":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b9d1c27ef17042de999de0dad38d4822":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b9b77df4dfe145c7aa95420c8899fce9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3c215ac7c1734542a0106905ad3a47df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"25d000fc42ee4fdd88b8a5275ba14cd0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4d6d7e933a984588ac2a54da65127cab":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_46704849083e4dbabaa07e144843a42d","IPY_MODEL_6a831feae31d4b738c3fba09f36dd5aa","IPY_MODEL_3b546d9d483f4ec0a4c8e8030c226532"],"layout":"IPY_MODEL_86230e390c2e4374b7964534730c1b80"}},"46704849083e4dbabaa07e144843a42d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_212d0e0e3b624140b92ace2eb4156266","placeholder":"​","style":"IPY_MODEL_787a57af0fb440f980846b5015c4cfb8","value":"config.json: 100%"}},"6a831feae31d4b738c3fba09f36dd5aa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_209ee84bfe5a4deaa781bd3ca46ce73a","max":615,"min":0,"orientation":"horizontal","style":"IPY_MODEL_12aa70d978b8463cb0881aeea94708bc","value":615}},"3b546d9d483f4ec0a4c8e8030c226532":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1dac38ce2e02460f94a88cd88e08c460","placeholder":"​","style":"IPY_MODEL_8fd8763a4c714d0e9c7ffad9f371cce2","value":" 615/615 [00:00&lt;00:00, 64.3kB/s]"}},"86230e390c2e4374b7964534730c1b80":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"212d0e0e3b624140b92ace2eb4156266":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"787a57af0fb440f980846b5015c4cfb8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"209ee84bfe5a4deaa781bd3ca46ce73a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"12aa70d978b8463cb0881aeea94708bc":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1dac38ce2e02460f94a88cd88e08c460":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8fd8763a4c714d0e9c7ffad9f371cce2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"282177cca02a462aa4c4cad4a62dd749":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_922e7be8a6fd45cc89cb165449033391","IPY_MODEL_8e9f783307124476bdafbd1c4e45a8da","IPY_MODEL_5b13608a4c62491889e623e7d790788b"],"layout":"IPY_MODEL_7009b040befc4389ae81c66284049744"}},"922e7be8a6fd45cc89cb165449033391":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3ddde7d2535f4be5a1abef712b32022b","placeholder":"​","style":"IPY_MODEL_73d6cbfd61ef47b293b9013a69aa553d","value":"model.safetensors: 100%"}},"8e9f783307124476bdafbd1c4e45a8da":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_af6f63bcc4764c7dbb59df7817c82701","max":1115567652,"min":0,"orientation":"horizontal","style":"IPY_MODEL_697a60c68c7e45c0a23a9caddaf43329","value":1115567652}},"5b13608a4c62491889e623e7d790788b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_05d2765994524f88887afa32e0ed2a0a","placeholder":"​","style":"IPY_MODEL_697ee38a43af4208bd2babdd5eaf7924","value":" 1.12G/1.12G [00:05&lt;00:00, 280MB/s]"}},"7009b040befc4389ae81c66284049744":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3ddde7d2535f4be5a1abef712b32022b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"73d6cbfd61ef47b293b9013a69aa553d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"af6f63bcc4764c7dbb59df7817c82701":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"697a60c68c7e45c0a23a9caddaf43329":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"05d2765994524f88887afa32e0ed2a0a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"697ee38a43af4208bd2babdd5eaf7924":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e50a9d4603414e75a1d45f7a3174a1f9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7315431fc99044269049eee821f1a05b","IPY_MODEL_f3b586923c61457ebc8e7609cdd404ee","IPY_MODEL_85d3e597232247d9881fff4d0b4f9136"],"layout":"IPY_MODEL_b2aac20cfc6248099a8cc966ee827376"}},"7315431fc99044269049eee821f1a05b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ad2be94b0c6e4d6692444ebead647e20","placeholder":"​","style":"IPY_MODEL_d8565ff1ef8b403490e3fd6f5edb1014","value":"config.json: 100%"}},"f3b586923c61457ebc8e7609cdd404ee":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d7f631618a90432ba45242c8937facac","max":615,"min":0,"orientation":"horizontal","style":"IPY_MODEL_41b6520c8375458d8cd93ca9d1560df9","value":615}},"85d3e597232247d9881fff4d0b4f9136":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_78004890cf864769a85da61875212e58","placeholder":"​","style":"IPY_MODEL_22060bea89b249649c92a293c4395f0e","value":" 615/615 [00:00&lt;00:00, 21.3kB/s]"}},"b2aac20cfc6248099a8cc966ee827376":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad2be94b0c6e4d6692444ebead647e20":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d8565ff1ef8b403490e3fd6f5edb1014":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d7f631618a90432ba45242c8937facac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"41b6520c8375458d8cd93ca9d1560df9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"78004890cf864769a85da61875212e58":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"22060bea89b249649c92a293c4395f0e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ca42519b061144979e711dd0a1f5ef5a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_59bfb01595f344e288f7f8b90df5c561","IPY_MODEL_2a54d0f2cace4badb3bc8d7d586712aa","IPY_MODEL_5a345f0345204906a2dd60b9c3917587"],"layout":"IPY_MODEL_10c40ea8165c4c8b87f9503944841638"}},"59bfb01595f344e288f7f8b90df5c561":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_489552decb5f493580f3fd3097a75491","placeholder":"​","style":"IPY_MODEL_2dbcf7e4cad24e4d87080c21b8d8b26d","value":"model.safetensors: 100%"}},"2a54d0f2cace4badb3bc8d7d586712aa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f5540a1ecbf2437498969558cdf7f2a1","max":1115567652,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1a1d9f0ce2dd4fb583db45a67a45503c","value":1115567652}},"5a345f0345204906a2dd60b9c3917587":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f73f02251db544e2afa39c2896d0995a","placeholder":"​","style":"IPY_MODEL_71a53bc923a54c749e338a24efb62bc6","value":" 1.12G/1.12G [00:07&lt;00:00, 241MB/s]"}},"10c40ea8165c4c8b87f9503944841638":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"489552decb5f493580f3fd3097a75491":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2dbcf7e4cad24e4d87080c21b8d8b26d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f5540a1ecbf2437498969558cdf7f2a1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a1d9f0ce2dd4fb583db45a67a45503c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f73f02251db544e2afa39c2896d0995a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"71a53bc923a54c749e338a24efb62bc6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}