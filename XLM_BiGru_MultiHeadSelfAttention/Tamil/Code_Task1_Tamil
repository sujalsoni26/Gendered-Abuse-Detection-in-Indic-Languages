{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"dlGTsX5uN4xm","executionInfo":{"status":"ok","timestamp":1744627184250,"user_tz":-330,"elapsed":13407,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"outputs":[],"source":["import pandas as pd\n","import tensorflow as tf\n","import numpy as np\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","# from skmultilearn.adapt import MLkNN\n","import sklearn.metrics as metrics\n","from sklearn.metrics import hamming_loss, accuracy_score\n","from sklearn.metrics import confusion_matrix\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.metrics import multilabel_confusion_matrix\n","import os"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":63976,"status":"ok","timestamp":1744627248235,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"q_313eJtkhD_","outputId":"9f2abcc4-e3de-4b3f-c549-deba0d754d79"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":3855,"status":"ok","timestamp":1744627252089,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"j7EnQabPNwk0","outputId":"cf6b7303-340d-4ea2-ef06-8a4454aa3127"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      label                                               text\n","0         0     *1. роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...\n","1         0     роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...\n","2         0           родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛\n","3         1      рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН ЁЯШЖ\n","4         1    роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐- роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ.. роорпБро▓рпИ ...\n","...     ...                                                ...\n","6774      1                      ЁЯШнЁЯШнЁЯШн роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ ЁЯШнЁЯШнЁЯШн\n","6775      0  ЁЯЩДЁЯЩДЁЯЩДЁЯЩД роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ...   роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИ...\n","6776      0  ЁЯЪироОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│...\n","6777      0  ЁЯдг ЁЯдг роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпН...\n","6778      1  ЁЯдгЁЯдгЁЯдг роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  ...\n","\n","[6779 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2836f2c4-884c-4e0c-8813-033813ebf976\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>*1. роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН ЁЯШЖ</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐- роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ.. роорпБро▓рпИ ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6774</th>\n","      <td>1</td>\n","      <td>ЁЯШнЁЯШнЁЯШн роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ ЁЯШнЁЯШнЁЯШн</td>\n","    </tr>\n","    <tr>\n","      <th>6775</th>\n","      <td>0</td>\n","      <td>ЁЯЩДЁЯЩДЁЯЩДЁЯЩД роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ...   роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИ...</td>\n","    </tr>\n","    <tr>\n","      <th>6776</th>\n","      <td>0</td>\n","      <td>ЁЯЪироОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│...</td>\n","    </tr>\n","    <tr>\n","      <th>6777</th>\n","      <td>0</td>\n","      <td>ЁЯдг ЁЯдг роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпН...</td>\n","    </tr>\n","    <tr>\n","      <th>6778</th>\n","      <td>1</td>\n","      <td>ЁЯдгЁЯдгЁЯдг роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6779 rows ├Ч 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2836f2c4-884c-4e0c-8813-033813ebf976')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2836f2c4-884c-4e0c-8813-033813ebf976 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2836f2c4-884c-4e0c-8813-033813ebf976');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cae34dc8-b1aa-44d1-8c86-65d987409d78\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cae34dc8-b1aa-44d1-8c86-65d987409d78')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cae34dc8-b1aa-44d1-8c86-65d987409d78 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0ff36f47-27d8-4e87-a553-75a0c887c5c2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('d1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0ff36f47-27d8-4e87-a553-75a0c887c5c2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('d1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d1","summary":"{\n  \"name\": \"d1\",\n  \"rows\": 6779,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6779,\n        \"samples\": [\n          \"\\u0b8e\\u0ba9\\u0bcd\\u0ba9\\u0bbe\\u0b9f\\u0bbe \\u0b92\\u0ba9\\u0bcd\\u0baa\\u0ba4\\u0bc1 \\u0bb5\\u0bbf\\u0b95\\u0bcd\\u0b95\\u0bc6\\u0b9f\\u0bcd \\u0bb5\\u0bbf\\u0bb4\\u0bc1\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bc1 \\u0baa\\u0bc1\\u0bae\\u0bcd\\u0bb0\\u0bbe \\u0bae\\u0bc1\\u0b9f\\u0bcd\\u0b9f\\u0bc8\\u0bb2 \\u0b87\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bbe\\u0ba9\\u0bcd\",\n          \"\\u0ba4\\u0ba9\\u0bcd\\u0ba9\\u0b9f\\u0b95\\u0bcd\\u0b95\\u0bae\\u0bcd\\u0ba9\\u0bbe \\u0b85\\u0ba4\\u0bc1 \\u0b87\\u0ba4\\u0bbe\\u0ba9\\u0bcd. \\u0b87\\u0ba4\\u0bc6\\u0bb2\\u0bcd\\u0bb2\\u0bbe\\u0bae\\u0bcd \\u0b86\\u0bae\\u0bc8\\u0b95\\u0bcd\\u0b95\\u0bc1 \\u0baa\\u0bc1\\u0bb0\\u0bbf\\u0baf\\u0bbe\\u0ba4\\u0bc1 \\u0baa\\u0bc1\\u0ba3\\u0bcd\\u0b9f\\u0bc8 \\u0bae\\u0bb5\\u0ba9\\u0bc1\\u0b99\\u0bcd\\u0b95 \\u0baa\\u0bc0\\u0baf \\u0ba4\\u0bbf\\u0ba9\\u0bcd\\u0ba9\\u0bc1\\u0b9f\\u0bcd\\u0b9f\\u0bc1 \\u0bae\\u0bc2\\u0ba4\\u0bcd\\u0ba4\\u0bbf\\u0bb0\\u0bae\\u0bcd \\u0b95\\u0bc1\\u0b9f\\u0bbf\\u0b9a\\u0bcd\\u0b9a\\u0bbf\\u0b9f\\u0bcd\\u0b9f\\u0bc1 \\u0bb5\\u0bbf\\u0b9c\\u0baf\\u0bcd\\u0baf\\u0bcb\\u0b9f \\u0baa\\u0bc2\\u0bb2\\u0bc8 \\u0b8a\\u0bae\\u0bcd\\u0baa \\u0ba4\\u0bbe\\u0ba9\\u0bcd \\u0bb2\\u0bbe\\u0baf\\u0b95\\u0bcd\\u0b95\\u0bc1.  Vijay &amp; Vikram\\ud83d\\udc4c\\ud83d\\ude0d #Beast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}],"source":["# d2 = pd.read_csv('train_ta_l1_modded.csv')\n","d1 = pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/training/train_ta_l1.csv')\n","# d2 = pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/training/train_ta_l2.csv')\n","# d3 = pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/training/train_ta_l3.csv')\n","\n","# Convert the relevant columns to numeric before applying max\n","for col in ['ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6']:\n","    d1[col] = pd.to_numeric(d1[col], errors='coerce')  # errors='coerce' to handle non-numeric values\n","    # d2[col] = pd.to_numeric(d2[col], errors='coerce')  # errors='coerce' to handle non-numeric values\n","    # d3[col] = pd.to_numeric(d3[col], errors='coerce')  # errors='coerce' to handle non-numeric values\n","\n","d1['label'] = d1[['ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6']].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","d1 = d1.drop(['key', 'ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6'], axis=1)\n","d1['label'] = d1['label'].astype(int)\n","d1 = d1[['label', 'text']]\n","d1\n","\n","# d2['label'] = d2[['ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6']].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","# d2 = d2.drop(['key', 'ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6'], axis=1)\n","# d2['label'] = d2['label'].astype(int)\n","# d2 = d2[['label', 'text']]\n","# d2\n","\n","# d3['label'] = d3[['ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6']].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","# d3 = d3.drop(['key', 'ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6'], axis=1)\n","# d3['label'] = d3['label'].astype(int)\n","# d3 = d3[['label', 'text']]\n","# d3\n"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":250,"status":"ok","timestamp":1744627252339,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"aFMNUokjOH7P","colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"5c0618ec-254e-477b-f06e-fc81b0aa9a4b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      label                                               text\n","0         0     *1. роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...\n","1         0     роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...\n","2         0           родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛\n","3         1      рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН ЁЯШЖ\n","4         1    роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐- роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ.. роорпБро▓рпИ ...\n","...     ...                                                ...\n","6774      1                      ЁЯШнЁЯШнЁЯШн роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ ЁЯШнЁЯШнЁЯШн\n","6775      0  ЁЯЩДЁЯЩДЁЯЩДЁЯЩД роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ...   роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИ...\n","6776      0  ЁЯЪироОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│...\n","6777      0  ЁЯдг ЁЯдг роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпН...\n","6778      1  ЁЯдгЁЯдгЁЯдг роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  ...\n","\n","[6779 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-0680d66d-e9ec-464c-bd06-94f4dcf20055\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>*1. роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН ЁЯШЖ</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐- роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ.. роорпБро▓рпИ ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6774</th>\n","      <td>1</td>\n","      <td>ЁЯШнЁЯШнЁЯШн роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ ЁЯШнЁЯШнЁЯШн</td>\n","    </tr>\n","    <tr>\n","      <th>6775</th>\n","      <td>0</td>\n","      <td>ЁЯЩДЁЯЩДЁЯЩДЁЯЩД роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ...   роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИ...</td>\n","    </tr>\n","    <tr>\n","      <th>6776</th>\n","      <td>0</td>\n","      <td>ЁЯЪироОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│...</td>\n","    </tr>\n","    <tr>\n","      <th>6777</th>\n","      <td>0</td>\n","      <td>ЁЯдг ЁЯдг роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпН...</td>\n","    </tr>\n","    <tr>\n","      <th>6778</th>\n","      <td>1</td>\n","      <td>ЁЯдгЁЯдгЁЯдг роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6779 rows ├Ч 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0680d66d-e9ec-464c-bd06-94f4dcf20055')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0680d66d-e9ec-464c-bd06-94f4dcf20055 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0680d66d-e9ec-464c-bd06-94f4dcf20055');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35ff32f2-31b1-405a-bea8-9e97af5ff23a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35ff32f2-31b1-405a-bea8-9e97af5ff23a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35ff32f2-31b1-405a-bea8-9e97af5ff23a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7f3d54da-2135-4775-9bb7-39bbaa241b1a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('d1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7f3d54da-2135-4775-9bb7-39bbaa241b1a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('d1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d1","summary":"{\n  \"name\": \"d1\",\n  \"rows\": 6779,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6779,\n        \"samples\": [\n          \"\\u0b8e\\u0ba9\\u0bcd\\u0ba9\\u0bbe\\u0b9f\\u0bbe \\u0b92\\u0ba9\\u0bcd\\u0baa\\u0ba4\\u0bc1 \\u0bb5\\u0bbf\\u0b95\\u0bcd\\u0b95\\u0bc6\\u0b9f\\u0bcd \\u0bb5\\u0bbf\\u0bb4\\u0bc1\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bc1 \\u0baa\\u0bc1\\u0bae\\u0bcd\\u0bb0\\u0bbe \\u0bae\\u0bc1\\u0b9f\\u0bcd\\u0b9f\\u0bc8\\u0bb2 \\u0b87\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bbe\\u0ba9\\u0bcd\",\n          \"\\u0ba4\\u0ba9\\u0bcd\\u0ba9\\u0b9f\\u0b95\\u0bcd\\u0b95\\u0bae\\u0bcd\\u0ba9\\u0bbe \\u0b85\\u0ba4\\u0bc1 \\u0b87\\u0ba4\\u0bbe\\u0ba9\\u0bcd. \\u0b87\\u0ba4\\u0bc6\\u0bb2\\u0bcd\\u0bb2\\u0bbe\\u0bae\\u0bcd \\u0b86\\u0bae\\u0bc8\\u0b95\\u0bcd\\u0b95\\u0bc1 \\u0baa\\u0bc1\\u0bb0\\u0bbf\\u0baf\\u0bbe\\u0ba4\\u0bc1 \\u0baa\\u0bc1\\u0ba3\\u0bcd\\u0b9f\\u0bc8 \\u0bae\\u0bb5\\u0ba9\\u0bc1\\u0b99\\u0bcd\\u0b95 \\u0baa\\u0bc0\\u0baf \\u0ba4\\u0bbf\\u0ba9\\u0bcd\\u0ba9\\u0bc1\\u0b9f\\u0bcd\\u0b9f\\u0bc1 \\u0bae\\u0bc2\\u0ba4\\u0bcd\\u0ba4\\u0bbf\\u0bb0\\u0bae\\u0bcd \\u0b95\\u0bc1\\u0b9f\\u0bbf\\u0b9a\\u0bcd\\u0b9a\\u0bbf\\u0b9f\\u0bcd\\u0b9f\\u0bc1 \\u0bb5\\u0bbf\\u0b9c\\u0baf\\u0bcd\\u0baf\\u0bcb\\u0b9f \\u0baa\\u0bc2\\u0bb2\\u0bc8 \\u0b8a\\u0bae\\u0bcd\\u0baa \\u0ba4\\u0bbe\\u0ba9\\u0bcd \\u0bb2\\u0bbe\\u0baf\\u0b95\\u0bcd\\u0b95\\u0bc1.  Vijay &amp; Vikram\\ud83d\\udc4c\\ud83d\\ude0d #Beast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["d1.rename(columns = {'Label':'label'}, inplace = True)\n","d1\n"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"T3EL9YH_OKsQ","executionInfo":{"status":"ok","timestamp":1744627252341,"user_tz":-330,"elapsed":1,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"outputs":[],"source":["df1=d1\n"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"UYRvApL2OMdP","executionInfo":{"status":"ok","timestamp":1744627253256,"user_tz":-330,"elapsed":894,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"outputs":[],"source":["## Word Pre-Processing ##\n","import nltk\n","import string\n","import re\n","\n","## Function to normalize text for pre-processing ##\n","def normalize_text(text):\n","  emoji_pattern = re.compile(\"[\"\n","                              u\"\\U0001F600-\\U0001F64F\"  # emoticons\n","                              u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n","                              u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n","                              u\"\\U0001F700-\\U0001F77F\"  # alchemical symbols\n","                              u\"\\U0001F780-\\U0001F7FF\"  # Geometric Shapes Extended\n","                              u\"\\U0001F800-\\U0001F8FF\"  # Supplemental Arrows-C\n","                              u\"\\U0001F900-\\U0001F9FF\"  # Supplemental Symbols and Pictographs\n","                              u\"\\U0001FA00-\\U0001FA6F\"  # Chess Symbols\n","                              u\"\\U0001FA70-\\U0001FAFF\"  # Symbols and Pictographs Extended-A\n","                              u\"\\U00002702-\\U000027B0\"  # Dingbats\n","                              u\"\\U000024C2-\\U0001F251\"\n","                              \"]+\", flags=re.UNICODE)\n","  text = text.lower()\n","  text = re.sub('\\[.*?\\]', ' ', text)\n","  text = re.sub('https?://\\S+|www\\.\\S+', ' ', text)\n","  text = re.sub('<.*?>+', ' ', text)\n","  text = re.sub('[%s]' % re.escape(string.punctuation), ' ', text)\n","  text = re.sub('\\n', ' ', text)\n","  text = re.sub('\\w*\\d\\w*', ' ', text)\n","  text = re.sub('<handle replaced>', '', text)\n","  text = emoji_pattern.sub(r'', text)\n","  return text\n"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":306,"status":"ok","timestamp":1744627253564,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"BWRQxyY3ONGk","colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"bf15ad1a-adba-4004-ae57-0df3f88d218c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      label                                               text\n","0         0         роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...\n","1         0     роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...\n","2         0           родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛\n","3         1       рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН \n","4         1    роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐  роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ   роорпБро▓рпИ ...\n","...     ...                                                ...\n","6774      1                             роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ \n","6775      0   роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ      роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИройрпБ рои...\n","6776      0  роОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│ро╛...\n","6777      0    роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпНроХ ...\n","6778      1   роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  родро╛роп...\n","\n","[6779 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-a2b3cd41-eb7e-4474-be88-f57fb939fb0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>роорпБро░роЪрпКро▓ро┐ роЕро▓рпБро╡ро▓роХроорпН роЕроорпИроирпНродрпБро│рпНро│ роЗроЯроорпН рокроЮрпНроЪрооро┐...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>роЪрпЛродрпНродрпБроХрпНроХрпБ рокро┐роЪрпНроЪрпИ роОроЯрпБроХрпНроХро┐ро▒ роХроЯроЩрпНроХро╛ро░ роиро╛ропрпНроХро│рпБроХ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>родродрпНродрокрпБродрпНрод родродрпНродрокрпБродрпНрод ройрпНройрпБ роОродро╛ро╡родрпБ рокрпБро░ро┐ропрпБродро╛</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>рокроЪрпНроЪрпИ роорпКро│роХро╛ роХро╛ро░роорпН vicky роЕроорпНрооро╛ рокрпБрогрпНроЯрпИ роиро╛ро▒рпБроорпН</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>роОройрпНрой роЙроЯроорпНрокрпБ роЯро╛ роЪро╛рооро┐  роЪрпБроорпНрооро╛ ро╡ро│рпБро╡ро│рпБройрпБ   роорпБро▓рпИ ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6774</th>\n","      <td>1</td>\n","      <td>роТроорпНрооро╛ро│ рокроЯро┐роХрпНроХро▓рпН рокрпБрогрпНроЯ</td>\n","    </tr>\n","    <tr>\n","      <th>6775</th>\n","      <td>0</td>\n","      <td>роОройрпНрой роОро┤ро╡рпБропро╛ роЗродрпБ      роЗродрпЖро▓рпНро▓ро╛роорпН роТро░рпБ рокрпЖро░рпБроорпИройрпБ рои...</td>\n","    </tr>\n","    <tr>\n","      <th>6776</th>\n","      <td>0</td>\n","      <td>роОроХрпНро╕рпН рокро┐ро░ро╕рпН рокрпЗро░рпНро▓рпН роХрокрпНрокро▓рпН родрпА ро╡ро┐рокродрпНродрпБроХрпНроХрпБ роЙро│рпНро│ро╛...</td>\n","    </tr>\n","    <tr>\n","      <th>6777</th>\n","      <td>0</td>\n","      <td>роЪро▓рпНро▓ро┐ роЬро╛родро┐ ро╡рпЖро▒ро┐ роорпБроЯрпНроЯро╛ рокрпБрогрпНроЯ роЙроЩрпНроХ рокрпКрогрпНрогрпБроЩрпНроХ ...</td>\n","    </tr>\n","    <tr>\n","      <th>6778</th>\n","      <td>1</td>\n","      <td>роирпА роЪрпКро▓рпНро▒родрпБ роОро▓рпНро▓ро╛роорпБроорпН роЕроирпНрод родро┐роорпНроХро╡рпЛроЯ родроорпНрокро┐  родро╛роп...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6779 rows ├Ч 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2b3cd41-eb7e-4474-be88-f57fb939fb0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a2b3cd41-eb7e-4474-be88-f57fb939fb0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a2b3cd41-eb7e-4474-be88-f57fb939fb0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bfb70217-1007-4fd1-aa6f-aeb342fbf636\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfb70217-1007-4fd1-aa6f-aeb342fbf636')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bfb70217-1007-4fd1-aa6f-aeb342fbf636 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2b7dcc3e-b0e5-4fa0-8be0-1b91379602f2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('d1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2b7dcc3e-b0e5-4fa0-8be0-1b91379602f2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('d1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d1","summary":"{\n  \"name\": \"d1\",\n  \"rows\": 6779,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6755,\n        \"samples\": [\n          \" \\u0b87\\u0ba8\\u0bcd\\u0ba4 \\u0bb0\\u0bcb\\u0b9a \\u0baa\\u0bc1\\u0ba3\\u0bcd\\u0b9f follow \\u0baa\\u0ba3\\u0bcd\\u0ba3\\u0bc1\\u0bb1\\u0baa\\u0bcd\\u0baa \\u0b87\\u0bb0\\u0bc1\\u0ba8\\u0bcd\\u0ba4\\u0bc1\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0ba3\\u0bc1\\u0bae\\u0bcd\",\n          \"\\u0b85\\u0bb2\\u0bbf \\u0b9a\\u0bc1\\u0ba3\\u0bcd\\u0ba3\\u0bbf\\u0baf\\u0bbe \\u0baa\\u0bbe\\u0ba4\\u0bcd\\u0ba4\\u0bc1 \\u0b8a\\u0bae\\u0bcd\\u0baa\\u0bc1\\u0b9f\\u0bbe   \\u0baa\\u0bc1\\u0ba3\\u0bcd\\u0b9f\\u0bbe \\u0bae\\u0bb5\\u0ba9\\u0bc7  \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["df1['text'] = df1['text'].apply(lambda x: normalize_text(x))\n","df1\n"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"BuuhdL_hOO-B","executionInfo":{"status":"ok","timestamp":1744627253574,"user_tz":-330,"elapsed":9,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"outputs":[],"source":["X1 = list(df1['text'])\n","#y = np.asarray(d1[d1.columns[1:]])\n","y_data1 = df1['label']\n","y1 = y_data1.values\n"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":14,"status":"ok","timestamp":1744627253589,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"tJ8ocusTOXop","colab":{"base_uri":"https://localhost:8080/"},"outputId":"ee4c3dac-cfc8-4525-bbe0-1ecbf73671a6"},"outputs":[{"output_type":"stream","name":"stdout","text":["6779\n","6779\n"]}],"source":["print(len(X1))\n","print(len(y1))"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1744627253606,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"_0kgXjp0ObYW","colab":{"base_uri":"https://localhost:8080/"},"outputId":"71e570f1-d2ec-4430-a572-b1eacd882aa7"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1]\n","[3777 3002]\n","1.2581612258494337\n"]}],"source":["# y1.#\n","unique_values, counts = np.unique(y1, return_counts=True)\n","print(unique_values)\n","print(counts)\n","print(counts[0]/counts[1])\n"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":238,"status":"ok","timestamp":1744627253845,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"},"user_tz":-330},"id":"7CGZht8zOhBl","colab":{"base_uri":"https://localhost:8080/","height":993},"outputId":"7fa32b80-7b4f-4d0e-a57c-762ad29d9df1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Average Text Length: 121.20578256379997\n","Length 0-10: 79 79\n","Length 10-20: 409 488\n","Length 20-30: 405 893\n","Length 30-40: 378 1271\n","Length 40-50: 374 1645\n","Length 50-60: 330 1975\n","Length 60-70: 337 2312\n","Length 70-80: 283 2595\n","Length 80-90: 268 2863\n","Length 90-100: 267 3130\n","Length 100-110: 268 3398\n","Length 110-120: 286 3684\n","Length 120-130: 258 3942\n","Length 130-140: 259 4201\n","Length 140-150: 249 4450\n","Length 150-160: 194 4644\n","Length 160-170: 184 4828\n","Length 170-180: 208 5036\n","Length 180-190: 178 5214\n","Length 190-200: 133 5347\n","Length 200-210: 171 5518\n","Length 210-220: 276 5794\n","Length 220-230: 114 5908\n","Length 230-240: 96 6004\n","Length 240-250: 109 6113\n","Length 250-260: 159 6272\n","Length 260-270: 148 6420\n","Length 270-280: 274 6694\n","Length 280-290: 85 6779\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Calculate the lengths of each text element\n","text_lengths = d1['text'].str.len()\n","\n","# Create a histogram with bins of size 10\n","plt.hist(text_lengths, bins=range(0, text_lengths.max() + 10, 10))\n","\n","plt.xlabel('Text Length')\n","plt.ylabel('Frequency')\n","plt.title('Distribution of Text Lengths')\n","plt.show()\n","\n","# Calculate and print the average text length\n","average_length = text_lengths.mean()\n","print(f\"Average Text Length: {average_length}\")\n","\n","# Get counts for each bucket of 10\n","bins = range(0, text_lengths.max() + 10, 10)\n","counts, _ = np.histogram(text_lengths, bins=bins)\n","\n","sum=0\n","# Print the counts for each bucket\n","for i in range(len(bins) - 1):\n","    sum+=counts[i]\n","    print(f\"Length {bins[i]}-{bins[i+1]}: {counts[i]} {sum}\")"]},{"cell_type":"code","source":["# -*- coding: utf-8 -*-\n","import tensorflow as tf\n","from tensorflow.keras.layers import Input, Dense, Bidirectional, GRU, MultiHeadAttention\n","from tensorflow.keras.models import Model\n","from transformers import XLMRobertaTokenizer, TFXLMRobertaModel\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, f1_score\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","\n","# ======================\n","# TAMIL-SPECIFIC CONFIG\n","# ======================\n","MAX_LEN = 256  # Longer sequences for Tamil script\n","BATCH_SIZE = 16\n","EPOCHS = 5\n","LEARNING_RATE = 2e-5\n","VAL_SPLIT = 0.2\n","CLASS_WEIGHT = {0: 1, 1: 1.25}  # Adjust based on Tamil dataset\n","XLM_MODEL_NAME = 'xlm-roberta-base'\n","\n","# ======================\n","# MODEL ARCHITECTURE\n","# ======================\n","class XLMRobertaEmbedding(tf.keras.layers.Layer):\n","    def __init__(self, model_name, **kwargs):\n","        super().__init__(**kwargs)\n","        self.xlm_model = TFXLMRobertaModel.from_pretrained(model_name)\n","\n","    def call(self, inputs):\n","        input_ids, attention_mask = inputs\n","        return self.xlm_model(\n","            input_ids,\n","            attention_mask=attention_mask,\n","            return_dict=True\n","        ).last_hidden_state"],"metadata":{"id":"6dTkJ9LP1Ish","executionInfo":{"status":"ok","timestamp":1744627266834,"user_tz":-330,"elapsed":13003,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":13,"metadata":{"id":"4zo9F8HaOirW","executionInfo":{"status":"ok","timestamp":1744628278979,"user_tz":-330,"elapsed":1012137,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/","height":596,"referenced_widgets":["612b661a29cb4abd9f21bf6690608da4","b09a18c640ec4375b368b251181e3052","6bab20abfc8e483a9d3c25bf19588f14","a30963045a694b0e9b54f856c7b068a6","f57ba0735cf24e1c8808a570fb462095","1fb711ab94b7484fb4aad13adc7b7747","c0bcb707f62d498cb870326ccd7ff7d4","f5fbe82a0afc42ee8e16658578a3f242","8401743e13ca42918034221226b0eda7","da2abfde94ce4f21b0cd57bc49d769db","9b02ea3fc076476abe93efc6fde2642e","6f58068d2c8c4848abc460676e84bd4d","7a640bb70d9a48da887baf6eb35be7f4","7687f34a51cc42f5b1be9d676af0bf13","8286f9be8bc644ff97aacc0bfe414348","94cde1a1f69f4ac081d184376b05d934","aa94d20208934127bedf917ca037f3bf","673a0956881d4b268460acadc10f27e8","f2d77127e5cb46a88a25f0a6efb4cd90","aba0b78022594f3cb5a94dabd48b5ab6","e385499b6f784f1b8fa276609df08a47","e9cfaf47305e4c7381e5313db7a07667","0dfb3e1d414f40d193747b0f9bb722c0","a20d008635ff4ef881ac29cd0094fc73","c1f591420f834bb0880625ab07cf01a0","d8388dbe96c5466582af87228f88aa96","d97ce11e46c24ea6b632f22b3d553290","555d16cf4ada48c7a819fe4bf03d4e11","f6c47cfae1e6448f9094f2cd19f42f92","724a69411b4444a9b14a35e106998215","f67d1c7427dd46fbb9c9b0b504a4a821","f4daf0e75f8d4cc593e9fbada5ae4564","42d8385076a04c21a524b534b9f9dccd","37e50b3e80574d4a8a9cfae4bfc34cc2","f2eea427017840d39c72e27b132eddaf","42db063e3e28474b9e9174839453364f","668af2e80c684318a6bb0e2b47865231","6948dd1a53cb4edea6524d9724f316f5","db746b09e62840eea47b8fa1e1342875","d614ad86178e44068a1c60e44f32c7ec","ca0b3a2a70ed4aeda90cff2d45199b39","69abc2c5d9b24a47941e08f3bb718bf0","1381a1d46edc4f8ca5326f94ee656f5b","33f27997b4524efd848caedd8494a8c4","8210a3f80a174c699e72f9d5d888f6cb","4506c39a52c14230bce3f07f1c7591d1","7cb8c8afaaf048f6b1f6dfb63f67f1fb","70fb33005cfc4036a5c86277e0a37ef1","ffda08eb5f0a42de8b22a9944860d0a8","0871251720014736894bd6c265f48913","4820a9ff78b142adba44d9a2c024ce75","b74a81e7db2a4f62a7ec982e4cbd4179","bae88cd61f5d49ccbf4ddb4471dab969","c6fff9625a8746019610c53d744aabcd","32ca31645ba24ae48ff8fc474e1942a4"]},"outputId":"87eff855-46fe-445b-b8e3-70f7f60d630d"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/25.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"612b661a29cb4abd9f21bf6690608da4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["sentencepiece.bpe.model:   0%|          | 0.00/5.07M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6f58068d2c8c4848abc460676e84bd4d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/9.10M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0dfb3e1d414f40d193747b0f9bb722c0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/615 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"37e50b3e80574d4a8a9cfae4bfc34cc2"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n","WARNING:huggingface_hub.file_download:Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`\n"]},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/1.12G [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8210a3f80a174c699e72f9d5d888f6cb"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFXLMRobertaModel: ['lm_head.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.bias', 'lm_head.dense.weight']\n","- This IS expected if you are initializing TFXLMRobertaModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFXLMRobertaModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFXLMRobertaModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFXLMRobertaModel for predictions without further training.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","\u001b[1m339/339\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m164s\u001b[0m 434ms/step - accuracy: 0.5023 - loss: 0.7705 - val_accuracy: 0.4440 - val_loss: 0.6961\n","Epoch 2/5\n","\u001b[1m339/339\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m214s\u001b[0m 480ms/step - accuracy: 0.5235 - loss: 0.7685 - val_accuracy: 0.5789 - val_loss: 0.6525\n","Epoch 3/5\n","\u001b[1m339/339\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m202s\u001b[0m 479ms/step - accuracy: 0.6531 - loss: 0.6936 - val_accuracy: 0.6497 - val_loss: 0.6133\n","Epoch 4/5\n","\u001b[1m339/339\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m202s\u001b[0m 480ms/step - accuracy: 0.6787 - loss: 0.6476 - val_accuracy: 0.6925 - val_loss: 0.5714\n","Epoch 5/5\n","\u001b[1m339/339\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m163s\u001b[0m 480ms/step - accuracy: 0.7186 - loss: 0.6133 - val_accuracy: 0.7028 - val_loss: 0.5699\n"]}],"source":["\n","\n","def create_model():\n","    input_ids = Input(shape=(MAX_LEN,), dtype=tf.int32, name='input_ids')\n","    attention_mask = Input(shape=(MAX_LEN,), dtype=tf.int32, name='attention_mask')\n","\n","    # XLM-R Embeddings\n","    embeddings = XLMRobertaEmbedding(XLM_MODEL_NAME)([input_ids, attention_mask])\n","\n","    # BiGRU with larger capacity for Tamil\n","    gru_out = Bidirectional(GRU(512, return_sequences=True))(embeddings)\n","\n","    # Multi-Head Attention\n","    attention = MultiHeadAttention(num_heads=4, key_dim=64)(gru_out, gru_out)\n","\n","    # Pooling + Classification\n","    pooled = tf.keras.layers.GlobalAveragePooling1D()(attention)\n","    dropout = tf.keras.layers.Dropout(0.3)(pooled)\n","    output = Dense(1, activation='sigmoid')(dropout)\n","\n","    return Model(inputs=[input_ids, attention_mask], outputs=output)\n","\n","# ======================\n","# TAMIL DATA PROCESSING\n","# ======================\n","# def load_tamil_data(file_path):\n","#     df = pd.read_csv(file_path)\n","#     # Add Tamil-specific preprocessing if needed\n","#     df['text'] = df['text'].str.replace('[^\\u0B80-\\u0BFF]', '', regex=True)  # Basic Tamil script cleaning\n","#     return df\n","\n","# # Load dataset (replace with your Tamil data path)\n","# tamil_df = load_tamil_data('/path/to/tamil_dataset.csv')\n","tamil_df=df1\n","\n","# Split data\n","X_train, X_val, y_train, y_val = train_test_split(\n","    tamil_df['text'].values,\n","    tamil_df['label'].values,\n","    test_size=VAL_SPLIT,\n","    stratify=tamil_df['label'],\n","    random_state=42\n",")\n","\n","# Tokenization\n","tokenizer = XLMRobertaTokenizer.from_pretrained(XLM_MODEL_NAME)\n","\n","def preprocess(texts):\n","    return tokenizer(\n","        texts.tolist(),\n","        max_length=MAX_LEN,\n","        truncation=True,\n","        padding='max_length',\n","        return_tensors='tf'\n","    )\n","\n","train_enc = preprocess(X_train)\n","val_enc = preprocess(X_val)\n","\n","# ======================\n","# MODEL TRAINING\n","# ======================\n","model = create_model()\n","model.compile(\n","    optimizer=tf.keras.optimizers.Adam(LEARNING_RATE),\n","    loss='binary_crossentropy',\n","    metrics=['accuracy']\n",")\n","\n","history = model.fit(\n","    {'input_ids': train_enc['input_ids'], 'attention_mask': train_enc['attention_mask']},\n","    y_train,\n","    validation_data=(\n","        {'input_ids': val_enc['input_ids'], 'attention_mask': val_enc['attention_mask']},\n","        y_val\n","    ),\n","    epochs=EPOCHS,\n","    batch_size=BATCH_SIZE,\n","    class_weight=CLASS_WEIGHT\n",")\n"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"fCzyhrZ6PrMw","executionInfo":{"status":"ok","timestamp":1744628339518,"user_tz":-330,"elapsed":41437,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/","height":513},"outputId":"27ff26b1-dd92-4943-a10c-53afa6879447"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tamil Validation Results:\n","\u001b[1m43/43\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 642ms/step\n","\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.81      0.61      0.69       756\n","           1       0.62      0.82      0.71       600\n","\n","    accuracy                           0.70      1356\n","   macro avg       0.72      0.72      0.70      1356\n","weighted avg       0.73      0.70      0.70      1356\n","\n","F1 Score: 0.7016\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","# ======================\n","# TAMIL EVALUATION\n","# ======================\n","def evaluate_model(model, data, true_labels):\n","    y_pred = model.predict(data)\n","    y_pred_labels = (y_pred > 0.5).astype(int)\n","\n","    print(\"\\nClassification Report:\")\n","    print(classification_report(true_labels, y_pred_labels))\n","    print(f\"F1 Score: {f1_score(true_labels, y_pred_labels, average='weighted'):.4f}\")\n","\n","print(\"Tamil Validation Results:\")\n","evaluate_model(model,\n","    {'input_ids': val_enc['input_ids'], 'attention_mask': val_enc['attention_mask']},\n","    y_val\n",")\n","\n","# Visualization\n","plt.figure(figsize=(12, 4))\n","plt.subplot(1, 2, 1)\n","plt.plot(history.history['accuracy'], label='Train Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Val Accuracy')\n","plt.title('Tamil Accuracy Progress')\n","plt.legend()\n","\n","plt.subplot(1, 2, 2)\n","plt.plot(history.history['loss'], label='Train Loss')\n","plt.plot(history.history['val_loss'], label='Val Loss')\n","plt.title('Tamil Loss Progress')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","source":["# Save model (TensorFlow SavedModel format)\n","model.save(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_Model.keras\")\n","\n","# Save tokenizer\n","\n","from transformers import XLMRobertaTokenizer\n","\n","# Save tokenizer in a dedicated directory\n","tokenizer.save_pretrained(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer\")"],"metadata":{"id":"NXE_7ZOf1kEh","executionInfo":{"status":"ok","timestamp":1744628340206,"user_tz":-330,"elapsed":687,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"477094b8-9738-429b-b6b2-d02b48b9773e"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer/tokenizer_config.json',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer/special_tokens_map.json',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer/sentencepiece.bpe.model',\n"," '/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer/added_tokens.json')"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["import tensorflow as tf\n","from transformers import XLMRobertaTokenizer\n","\n","# Load model with custom layer handling\n","loaded_model = tf.keras.models.load_model(\n","    \"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_Model.keras\",\n","    custom_objects={'XLMRobertaEmbedding': XLMRobertaEmbedding}\n",")\n","\n","# Load tokenizer\n","tokenizer1 = XLMRobertaTokenizer.from_pretrained(\"/content/drive/MyDrive/NLP_Project/XLM_BiGru_MultiHeadSelfAttention/Tamil/Task1_tokenizer\")"],"metadata":{"id":"Q6HCy0XTwuL2","executionInfo":{"status":"ok","timestamp":1744628463264,"user_tz":-330,"elapsed":11984,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6c51eff8-4126-462c-83b2-20affd66446c"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFXLMRobertaModel: ['lm_head.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.bias', 'lm_head.dense.weight']\n","- This IS expected if you are initializing TFXLMRobertaModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFXLMRobertaModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFXLMRobertaModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFXLMRobertaModel for predictions without further training.\n"]}]},{"cell_type":"code","source":["vv_1= pd.read_csv('/content/drive/MyDrive/NLP_Project/NLP/testing/test_ta_l1.csv')\n","vv1=vv_1\n"],"metadata":{"id":"93aHNtK61M5r","executionInfo":{"status":"ok","timestamp":1744628463283,"user_tz":-330,"elapsed":17,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["vv_1['text'] = vv_1['text'].apply(lambda x: normalize_text(x))\n","\n","# vv['text'] = vv['text'].apply(lambda x: normalize_text_2(x))\n","vv_1 = vv_1[['text']]\n","\n","vv_1.columns = ['text']\n","vv_1"],"metadata":{"id":"JgwBgL-w2AjC","executionInfo":{"status":"ok","timestamp":1744628463355,"user_tz":-330,"elapsed":40,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"46eb041a-be4b-48ab-b0bf-560e0d9e0a50"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   text\n","0        ро╡рпИро░роорпБродрпНродрпБ роТро░рпБ роХро╛роо рооро┐ро░рпБроХроорпН роОройрпНрокродрпБ роЪро┐ройро┐рооро╛ родрпБро▒...\n","1          valimai  ajithkumar   роПрогрпНроЯро╛ роХрпБро│рпНро│ рокрпБрогрпНроЯрпИроХ...\n","2      ambedkarblueshirtrally  роЗроирпНрод рокрпЛро░ро╛роЯрпНроЯродрпНродрпБроХрпНроХрпБ ...\n","3      breaking   родро┐ро░рпБроЪрпНроЪро┐ рооро╛ро╡роЯрпНроЯроорпН  роорогрокрпНрокро╛ро▒рпИропрпИ роЕроЯрпБрод...\n","4                          bachelor рокроЯрооро╛роЯро╛ роЗродрпБ роХрпЛродрпНродро╛  \n","...                                                 ...\n","1130                                              роКроорпНрокрпБ\n","1131   родрооро┐ро┤рпН родрпЖро░ро┐роЮрпНроЪро╡ройрпН родро╛ройрпН роЙроЩрпНроХрпКроорпНрооро╛ро▓ роХрпБрогрпНроЯро┐ роЕроЯро┐роХрпН...\n","1132   роирпА родро╛ройрпН рокроЩрпН роЕро╡ройрпЛро▓рпБроХрпНроХрпБ роХро░рпЖроХрпНроЯро╛ роЖрой роЖро│рпБ    ро▓родрпНрод...\n","1133   тАФ роЖрооро╛роорпН ро╡рпЗроЪ роЖрооро╛роорпН ро╡рпЗроЪ роЕропрпНроорпН роЪрпНро▓рпАрокро┐ройрпН роЕропрпНроорпН роЪрпН...\n","1134                    є╛Уж     gay      рокрпКроЯро┐ропройрпН рооро╛ро╕рпНроЯро░рпН \n","\n","[1135 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-4466b5ad-2b9f-4117-9e85-f7acb84e6bb3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ро╡рпИро░роорпБродрпНродрпБ роТро░рпБ роХро╛роо рооро┐ро░рпБроХроорпН роОройрпНрокродрпБ роЪро┐ройро┐рооро╛ родрпБро▒...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>valimai  ajithkumar   роПрогрпНроЯро╛ роХрпБро│рпНро│ рокрпБрогрпНроЯрпИроХ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ambedkarblueshirtrally  роЗроирпНрод рокрпЛро░ро╛роЯрпНроЯродрпНродрпБроХрпНроХрпБ ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>breaking   родро┐ро░рпБроЪрпНроЪро┐ рооро╛ро╡роЯрпНроЯроорпН  роорогрокрпНрокро╛ро▒рпИропрпИ роЕроЯрпБрод...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>bachelor рокроЯрооро╛роЯро╛ роЗродрпБ роХрпЛродрпНродро╛</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1130</th>\n","      <td>роКроорпНрокрпБ</td>\n","    </tr>\n","    <tr>\n","      <th>1131</th>\n","      <td>родрооро┐ро┤рпН родрпЖро░ро┐роЮрпНроЪро╡ройрпН родро╛ройрпН роЙроЩрпНроХрпКроорпНрооро╛ро▓ роХрпБрогрпНроЯро┐ роЕроЯро┐роХрпН...</td>\n","    </tr>\n","    <tr>\n","      <th>1132</th>\n","      <td>роирпА родро╛ройрпН рокроЩрпН роЕро╡ройрпЛро▓рпБроХрпНроХрпБ роХро░рпЖроХрпНроЯро╛ роЖрой роЖро│рпБ    ро▓родрпНрод...</td>\n","    </tr>\n","    <tr>\n","      <th>1133</th>\n","      <td>тАФ роЖрооро╛роорпН ро╡рпЗроЪ роЖрооро╛роорпН ро╡рпЗроЪ роЕропрпНроорпН роЪрпНро▓рпАрокро┐ройрпН роЕропрпНроорпН роЪрпН...</td>\n","    </tr>\n","    <tr>\n","      <th>1134</th>\n","      <td>є╛Уж     gay      рокрпКроЯро┐ропройрпН рооро╛ро╕рпНроЯро░рпН</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1135 rows ├Ч 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4466b5ad-2b9f-4117-9e85-f7acb84e6bb3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4466b5ad-2b9f-4117-9e85-f7acb84e6bb3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4466b5ad-2b9f-4117-9e85-f7acb84e6bb3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-77a7e8cb-ce3a-414b-8b0f-8d2b4f694db0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77a7e8cb-ce3a-414b-8b0f-8d2b4f694db0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-77a7e8cb-ce3a-414b-8b0f-8d2b4f694db0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3aaeb34e-7a37-4566-b78f-3d535d395c1a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('vv_1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3aaeb34e-7a37-4566-b78f-3d535d395c1a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('vv_1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"vv_1","summary":"{\n  \"name\": \"vv_1\",\n  \"rows\": 1135,\n  \"fields\": [\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1135,\n        \"samples\": [\n          \"\\u0b8f\\u0ba9\\u0bcd\\u0b9f\\u0bbe \\u0baa\\u0bca\\u0b9f\\u0bcd\\u0b9f\\u0bc8 \\u0ba4\\u0bc7 \\u0baa    \\u0b8e\\u0b99\\u0bcd\\u0b95\\u0bc1 \\u0baa\\u0bc1\\u0b95\\u0bbe\\u0bb0\\u0bcd \\u0b95\\u0bca\\u0b9f\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0baa\\u0b9f\\u0bcd\\u0b9f\\u0ba4\\u0bc1  \\u0baa\\u0bc6\\u0ba3\\u0bcd\\u0ba3\\u0bc8 \\u0bae\\u0bbf\\u0bb0\\u0b9f\\u0bcd\\u0b9f\\u0bbf \\u0bb5\\u0bc0\\u0b9f\\u0bc0\\u0baf\\u0bcb\\u0bb5\\u0bc8 \\u0ba8\\u0bc0\\u0b95\\u0bcd\\u0b95 \\u0b9a\\u0bc6\\u0baf\\u0bcd\\u0ba4\\u0bc1 \\u0b87\\u0bb0\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bbf\\u0bb1\\u0bc0\\u0bb0\\u0bcd\\u0b95\\u0bb3\\u0bcd   \\u0bae\\u0bc2\\u0ba4\\u0bcd\\u0ba4\\u0bbf\\u0bb0 \\u0b9a\\u0b99\\u0bcd\\u0b95\\u0bbf \\u0bb5\\u0bc7\\u0b9a\\u0bbf \\u0bae\\u0b95\\u0ba9\\u0bcd \\u0b9a\\u0bc1\\u0baa\\u0bcd\\u0baa\\u0bc8\\u0baf\\u0bbe \\u0bae\\u0bc0\\u0ba4\\u0bbe\\u0ba9 \\u0bb5\\u0bb4\\u0b95\\u0bcd\\u0b95\\u0bc8 \\u0b8e\\u0baa\\u0bcd\\u0baa\\u0b9f\\u0bbf \\u0bae\\u0bbf\\u0bb0\\u0b9f\\u0bcd\\u0b9f\\u0bbf \\u0bb5\\u0bbe\\u0baa\\u0bb8\\u0bcd \\u0bb5\\u0bbe\\u0b99\\u0bcd\\u0b95 \\u0bb5\\u0bc8\\u0ba4\\u0bcd\\u0ba4\\u0bc0\\u0bb0\\u0bcd\\u0b95\\u0bb3\\u0bcb \\u0b85\\u0ba4\\u0bc8 \\u0baa\\u0bcb\\u0bb2   \\u0ba4\\u0bc6\\u0bb0\\u0bc1\\u0bb5\\u0bc1\\u0b95\\u0bcd\\u0b95\\u0bc1 \\u0bb5\\u0ba8\\u0bcd\\u0ba4\\u0bc1 \\u0bae\\u0b95\\u0bcd\\u0b95\\u0bb3\\u0bc8 \\u0b9a\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0b95\\u0bcd\\u0b95\\u0bc1\\u0bae\\u0bcd \\u0baa\\u0bcb\\u0ba4\\u0bc1 \\u0b9a\\u0bbf\\u0bb1\\u0baa\\u0bcd\\u0baa\\u0bbe\\u0ba9 \\u0b9a\\u0bc6\\u0bb0\\u0bc1\\u0baa\\u0bcd\\u0baa\\u0bc1 \\u0bb5\\u0bb0\\u0bb5\\u0bc7\\u0bb1\\u0bcd\\u0baa\\u0bc1 \\u0ba8\\u0bbf\\u0b9a\\u0bcd\\u0b9a\\u0baf\\u0bae\\u0bcd \",\n          \"\\u0b9a\\u0bc0\\u0bae\\u0bbe\\u0ba9\\u0bcd  \\u0bae\\u0bbe\\u0b99\\u0bcd\\u0b95\\u0bbe \\u0baa\\u0bbe\\u0baf\\u0bcd\\u0bb8\\u0bcd  \\u0b9a\\u0b99\\u0bcd\\u0b95\\u0bbf \\u0ba4\\u0bbe\\u0baf\\u0bcd \\u0b92\\u0bb2\\u0bbf \\u0b95\\u0bc2\\u0b9f \\u0b9a\\u0bc7\\u0bb0\\u0bbe\\u0ba4\\u0ba9\\u0bcd\\u0ba9\\u0bc1 \\u0b9a\\u0bca\\u0ba9\\u0bcd\\u0ba9\\u0bbe \\u0b95\\u0bc7\\u0b95\\u0bcd\\u0b95\\u0bc1\\u0bb0\\u0bbe\\u0ba9\\u0bbe         \\u0b95\\u0bca\\u0b9e\\u0bcd\\u0b9a\\u0bae\\u0bcd \\u0b95\\u0bc2\\u0b9f \\u0b89\\u0bb4\\u0bc8\\u0b95\\u0bcd\\u0b95\\u0bbe\\u0bae \\u0ba8\\u0bbf\\u0ba9\\u0bcd\\u0ba9 \\u0b8e\\u0b9f\\u0ba4\\u0bcd\\u0ba4\\u0bc1\\u0bb2 \\u0b87\\u0bb0\\u0bc1\\u0ba8\\u0bcd\\u0ba4\\u0bc1 \\u0bb5\\u0bc0\\u0b9f\\u0bbf\\u0baf\\u0bcb \\u0baa\\u0bcb\\u0b9f\\u0bcd\\u0b9f\\u0bc1   \\u0bb5\\u0bbf\\u0bae\\u0bb0\\u0bcd\\u0b9a\\u0ba9\\u0bae\\u0bcd \\u0b8e\\u0ba9\\u0bcd\\u0bb1 \\u0baa\\u0bc6\\u0baf\\u0bb0\\u0bbf\\u0bb2\\u0bcd \\u0bb5\\u0bbe\\u0baf\\u0bc8 \\u0b95\\u0bc2\\u0b9f\\u0bcd\\u0b9f\\u0bbf \\u0b95\\u0bc1\\u0b9f\\u0bc1\\u0ba4\\u0bcd\\u0ba4\\u0bc1 \\u0baa\\u0bca\\u0bb4\\u0baa\\u0bcd\\u0baa\\u0bc1 \\u0ba8\\u0b9f\\u0ba4\\u0bcd\\u0ba4\\u0bc1\\u0bae\\u0bcd \\u0b87\\u0bb5\\u0ba9\\u0bcd    \\u0b85\\u0ba9\\u0bcd\\u0bb1\\u0bbe\\u0b9f\\u0bae\\u0bcd \\u0b89\\u0bb4\\u0bc8\\u0ba4\\u0bcd\\u0ba4\\u0bc1 \\u0bb5\\u0bbe\\u0bb4\\u0bc1\\u0bae\\u0bcd \\u0bae\\u0b95\\u0bcd\\u0b95\\u0bb3\\u0bc8 \\u0b9a\\u0bca\\u0bb2\\u0bcd\\u0bb2\\u0bc1\\u0bb1\\u0bbe\\u0ba9\\u0bcd   \\u0b9a\\u0bbf\\u0bb2\\u0bcd\\u0bb2\\u0bb1\\u0bc8 \\u0baa\\u0baf \",\n          \" \\u0b93\\u0b95\\u0bcd\\u0b95\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# X = list(vv1['text'])\n","#y = np.asarray(d1[d1.columns[1:]])\n","col_lst =  ['ta_a1', 'ta_a2', 'ta_a3', 'ta_a4', 'ta_a5', 'ta_a6']\n","\n","for col in col_lst:\n","    vv1[col] = pd.to_numeric(vv1[col], errors='coerce')\n","\n","\n","\n","vv1['label'] = vv1[col_lst].max(axis=1, skipna=True).astype(int)  # skipna=True to ignore empty values\n","\n","\n","vv1['label'] = vv1['label'].astype(int)\n","\n","\n","vv1 = vv1[['label', 'text']]\n","\n","\n","true_1 = vv1[\"label\"]\n","\n","# print(true_)\n","y_test_1 = true_1.values\n","\n","print(y_test_1)\n","print(len(y_test_1))"],"metadata":{"id":"wEyyvqz_2FTK","executionInfo":{"status":"ok","timestamp":1744628463365,"user_tz":-330,"elapsed":11,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"abd472a6-fce1-4536-b98b-205667cc2f70"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 0 ... 1 1 1]\n","1135\n"]}]},{"cell_type":"code","source":["X_test=vv1['text'].values\n","y_test=vv1['label'].values"],"metadata":{"id":"4b_2MKYQ2Yzp","executionInfo":{"status":"ok","timestamp":1744628463407,"user_tz":-330,"elapsed":41,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# sequence1 = tokenizer1.texts_to_sequences(vv_1['text']) # same tokenizer which is used on train data.\n","\n","def preprocess(texts):\n","    return tokenizer1(\n","        texts.tolist(),\n","        max_length=MAX_LEN,\n","        truncation=True,\n","        padding='max_length',\n","        return_tensors='tf'\n","    )"],"metadata":{"id":"aaq7qA_D2a0P","executionInfo":{"status":"ok","timestamp":1744628463408,"user_tz":-330,"elapsed":34,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["test_enc = preprocess(X_test)\n"],"metadata":{"id":"pM9kNzcN2cbl","executionInfo":{"status":"ok","timestamp":1744628463569,"user_tz":-330,"elapsed":164,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, f1_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import precision_recall_curve\n","\n","# ======================\n","# PREDICTION & EVALUATION\n","# ======================\n","def evaluate_model(model, data, true_labels):\n","    # Get predictions\n","    y_pred_probs = model.predict({\n","        'input_ids': data['input_ids'],\n","        'attention_mask': data['attention_mask']\n","    })\n","\n","    # Find optimal threshold\n","    precision, recall, thresholds = precision_recall_curve(true_labels, y_pred_probs)\n","    f1_scores = 2 * (precision * recall) / (precision + recall + 1e-9)\n","    best_threshold = thresholds[np.argmax(f1_scores)]\n","\n","    # Apply threshold\n","    y_pred = (y_pred_probs > best_threshold).astype(int)\n","\n","    # Metrics\n","    print(f\"\\nBest Threshold: {best_threshold:.4f}\")\n","    print(classification_report(true_labels, y_pred, target_names=['Neutral', 'Abuse']))\n","    print(f\"Weighted F1: {f1_score(true_labels, y_pred, average='weighted'):.4f}\")\n","\n","    # Confusion Matrix\n","    cm = confusion_matrix(true_labels, y_pred)\n","    plt.figure(figsize=(6,4))\n","    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n","                xticklabels=['Neutral', 'Abuse'],\n","                yticklabels=['Neutral', 'Abuse'])\n","    plt.xlabel('Predicted')\n","    plt.ylabel('True')\n","    plt.title('Confusion Matrix')\n","    plt.show()\n","\n","print(\"Test Set Evaluation:\")\n","evaluate_model(loaded_model, test_enc, y_test)\n","\n"],"metadata":{"id":"TiCxM-cQ2eGD","executionInfo":{"status":"ok","timestamp":1744628490052,"user_tz":-330,"elapsed":26482,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/","height":653},"outputId":"a8b899c5-dc8b-4ccb-bd59-c31e5bf10c18"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Set Evaluation:\n","\u001b[1m36/36\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 685ms/step\n","\n","Best Threshold: 0.3204\n","              precision    recall  f1-score   support\n","\n","     Neutral       0.82      0.57      0.67       414\n","       Abuse       0.79      0.93      0.85       721\n","\n","    accuracy                           0.80      1135\n","   macro avg       0.80      0.75      0.76      1135\n","weighted avg       0.80      0.80      0.79      1135\n","\n","Weighted F1: 0.7865\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, f1_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import precision_recall_curve\n","\n","\n","\n","# ======================\n","# SAMPLE PREDICTIONS\n","# ======================\n","def show_predictions(texts, labels, num_samples=5):\n","    indices = np.random.choice(len(texts), num_samples, replace=False)\n","    for idx in indices:\n","        text = texts[idx]\n","        true_label = labels[idx]\n","\n","        inputs = tokenizer1(\n","            text,\n","            max_length=MAX_LEN,\n","            truncation=True,\n","            padding='max_length',\n","            return_tensors='tf'\n","        )\n","        pred_prob = loaded_model.predict([inputs['input_ids'], inputs['attention_mask']])[0][0]\n","        pred_label = \"Abuse\" if pred_prob > 0.5 else \"Neutral\"\n","\n","        print(f\"\\nText: {text[:100]}...\")\n","        print(f\"True: {true_label} | Predicted: {pred_label} ({pred_prob:.4f})\")\n","\n","print(\"\\nSample Predictions:\")\n","show_predictions(X_test, y_test)"],"metadata":{"id":"GoZN-LTI2gBr","executionInfo":{"status":"ok","timestamp":1744628492328,"user_tz":-330,"elapsed":2275,"user":{"displayName":"Mridul Goel","userId":"00788096939106517521"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4c324d9a-a220-4cb6-c840-75038c499b7a"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Sample Predictions:\n","\u001b[1m1/1\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2s/step\n","\n","Text: родро┐ро░рпБроородро┐ роЪроЪро┐роХро▓ро╛ роХрпБроЯрпБроорпНрокроорпН  роЗроирпНродро┐ро░ро╛ роХро╛роирпНродро┐   ро░ро╛роЬро┐ро╡рпН  роХро╛роирпНродро┐  роорпБродро▓рпН ро░ро╛роХрпБро▓рпН роХро╛роирпНродро┐ ро╡ро░рпИ роирпЖро░рпБроЩрпНроХро┐роп родрпКроЯро░рпНрокро┐...\n","True: 0 | Predicted: Neutral (0.0491)\n","\u001b[1m1/1\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\n","Text: роЪро┐ро▒ро┐роп рокроЯрпНроЬрпЖроЯрпН рокроЯроорпНройро╛ роороЯрпНроЯрпБроорпН роОройрпНрой ticket rate  тВ╣ роХро╛ ро╡ро┐роХрпНроХрпБро▒ро╛роЩрпНроХ    роЕроЩрпНроХрпЗропрпБроорпН  тВ╣ родро╛рой ро╡ро╛роЩрпНроХрпБро▒ро╛роЩрпНроХ   роЕрок...\n","True: 1 | Predicted: Neutral (0.3582)\n","\u001b[1m1/1\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 72ms/step\n","\n","Text:   ро╡ро╛родрпНродрпБ роЖроЯрпНроЯрпБ роЪрпВродрпНродрпБ...\n","True: 1 | Predicted: Abuse (0.5973)\n","\u001b[1m1/1\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 72ms/step\n","\n","Text: рокро╛ро░родро┐роп роЬройродро╛ро╡рпИ роОродро┐ро░рпНроХрпНроХро┐ро▒рпЗройрпН рокрпЗро░рпНро╡ро┤ро┐ройрпНройрпБ роЪрпВро▓родрпНродрпИ родро░роХрпНроХрпБро▒рпИро╡ро╛ ро╡ро░рпИропродрпНродрпЖро▒ро┐роирпНрод роЙроЩрпНроХро│рпБроХрпНроХрпБ роЪро░рпНроЪрпН рокро╛родро┐ро░ро┐ропро╛ро░рпН...\n","True: 1 | Predicted: Neutral (0.1606)\n","\u001b[1m1/1\u001b[0m \u001b[32mтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\n","Text: роЪро┐ро░роЪро┐ро▓рпН рокро┐ро▒роирпНродро╡ройрпН рокро┐ро░ро╛роорогройрпН роЕро▓рпНро▓ роЪро┐ро░роЪрпИ роЕродро╛ро╡родрпБ роЕро▒ро┐ро╡рпБрокрпНрокрпВро░рпНро╡рооро╛рой роЪрпЖропро▓рпНрокро╛роЯрпБроХро│рпН роХрпКрогрпНроЯрпБ ро╡ро╛ро┤рпНрокро╡ройрпН роОро╡ройрпЛ роЕро╡ройрпЗ ...\n","True: 0 | Predicted: Neutral (0.1647)\n"]}]}],"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"612b661a29cb4abd9f21bf6690608da4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b09a18c640ec4375b368b251181e3052","IPY_MODEL_6bab20abfc8e483a9d3c25bf19588f14","IPY_MODEL_a30963045a694b0e9b54f856c7b068a6"],"layout":"IPY_MODEL_f57ba0735cf24e1c8808a570fb462095"}},"b09a18c640ec4375b368b251181e3052":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1fb711ab94b7484fb4aad13adc7b7747","placeholder":"тАЛ","style":"IPY_MODEL_c0bcb707f62d498cb870326ccd7ff7d4","value":"tokenizer_config.json:тАЗ100%"}},"6bab20abfc8e483a9d3c25bf19588f14":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f5fbe82a0afc42ee8e16658578a3f242","max":25,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8401743e13ca42918034221226b0eda7","value":25}},"a30963045a694b0e9b54f856c7b068a6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_da2abfde94ce4f21b0cd57bc49d769db","placeholder":"тАЛ","style":"IPY_MODEL_9b02ea3fc076476abe93efc6fde2642e","value":"тАЗ25.0/25.0тАЗ[00:00&lt;00:00,тАЗ1.43kB/s]"}},"f57ba0735cf24e1c8808a570fb462095":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1fb711ab94b7484fb4aad13adc7b7747":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c0bcb707f62d498cb870326ccd7ff7d4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f5fbe82a0afc42ee8e16658578a3f242":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8401743e13ca42918034221226b0eda7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"da2abfde94ce4f21b0cd57bc49d769db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9b02ea3fc076476abe93efc6fde2642e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6f58068d2c8c4848abc460676e84bd4d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7a640bb70d9a48da887baf6eb35be7f4","IPY_MODEL_7687f34a51cc42f5b1be9d676af0bf13","IPY_MODEL_8286f9be8bc644ff97aacc0bfe414348"],"layout":"IPY_MODEL_94cde1a1f69f4ac081d184376b05d934"}},"7a640bb70d9a48da887baf6eb35be7f4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_aa94d20208934127bedf917ca037f3bf","placeholder":"тАЛ","style":"IPY_MODEL_673a0956881d4b268460acadc10f27e8","value":"sentencepiece.bpe.model:тАЗ100%"}},"7687f34a51cc42f5b1be9d676af0bf13":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2d77127e5cb46a88a25f0a6efb4cd90","max":5069051,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aba0b78022594f3cb5a94dabd48b5ab6","value":5069051}},"8286f9be8bc644ff97aacc0bfe414348":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e385499b6f784f1b8fa276609df08a47","placeholder":"тАЛ","style":"IPY_MODEL_e9cfaf47305e4c7381e5313db7a07667","value":"тАЗ5.07M/5.07MтАЗ[00:00&lt;00:00,тАЗ27.3MB/s]"}},"94cde1a1f69f4ac081d184376b05d934":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aa94d20208934127bedf917ca037f3bf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"673a0956881d4b268460acadc10f27e8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f2d77127e5cb46a88a25f0a6efb4cd90":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aba0b78022594f3cb5a94dabd48b5ab6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e385499b6f784f1b8fa276609df08a47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e9cfaf47305e4c7381e5313db7a07667":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0dfb3e1d414f40d193747b0f9bb722c0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a20d008635ff4ef881ac29cd0094fc73","IPY_MODEL_c1f591420f834bb0880625ab07cf01a0","IPY_MODEL_d8388dbe96c5466582af87228f88aa96"],"layout":"IPY_MODEL_d97ce11e46c24ea6b632f22b3d553290"}},"a20d008635ff4ef881ac29cd0094fc73":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_555d16cf4ada48c7a819fe4bf03d4e11","placeholder":"тАЛ","style":"IPY_MODEL_f6c47cfae1e6448f9094f2cd19f42f92","value":"tokenizer.json:тАЗ100%"}},"c1f591420f834bb0880625ab07cf01a0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_724a69411b4444a9b14a35e106998215","max":9096718,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f67d1c7427dd46fbb9c9b0b504a4a821","value":9096718}},"d8388dbe96c5466582af87228f88aa96":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f4daf0e75f8d4cc593e9fbada5ae4564","placeholder":"тАЛ","style":"IPY_MODEL_42d8385076a04c21a524b534b9f9dccd","value":"тАЗ9.10M/9.10MтАЗ[00:00&lt;00:00,тАЗ46.9MB/s]"}},"d97ce11e46c24ea6b632f22b3d553290":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"555d16cf4ada48c7a819fe4bf03d4e11":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f6c47cfae1e6448f9094f2cd19f42f92":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"724a69411b4444a9b14a35e106998215":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f67d1c7427dd46fbb9c9b0b504a4a821":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f4daf0e75f8d4cc593e9fbada5ae4564":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"42d8385076a04c21a524b534b9f9dccd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"37e50b3e80574d4a8a9cfae4bfc34cc2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f2eea427017840d39c72e27b132eddaf","IPY_MODEL_42db063e3e28474b9e9174839453364f","IPY_MODEL_668af2e80c684318a6bb0e2b47865231"],"layout":"IPY_MODEL_6948dd1a53cb4edea6524d9724f316f5"}},"f2eea427017840d39c72e27b132eddaf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_db746b09e62840eea47b8fa1e1342875","placeholder":"тАЛ","style":"IPY_MODEL_d614ad86178e44068a1c60e44f32c7ec","value":"config.json:тАЗ100%"}},"42db063e3e28474b9e9174839453364f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca0b3a2a70ed4aeda90cff2d45199b39","max":615,"min":0,"orientation":"horizontal","style":"IPY_MODEL_69abc2c5d9b24a47941e08f3bb718bf0","value":615}},"668af2e80c684318a6bb0e2b47865231":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1381a1d46edc4f8ca5326f94ee656f5b","placeholder":"тАЛ","style":"IPY_MODEL_33f27997b4524efd848caedd8494a8c4","value":"тАЗ615/615тАЗ[00:00&lt;00:00,тАЗ38.5kB/s]"}},"6948dd1a53cb4edea6524d9724f316f5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"db746b09e62840eea47b8fa1e1342875":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d614ad86178e44068a1c60e44f32c7ec":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ca0b3a2a70ed4aeda90cff2d45199b39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"69abc2c5d9b24a47941e08f3bb718bf0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1381a1d46edc4f8ca5326f94ee656f5b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"33f27997b4524efd848caedd8494a8c4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8210a3f80a174c699e72f9d5d888f6cb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4506c39a52c14230bce3f07f1c7591d1","IPY_MODEL_7cb8c8afaaf048f6b1f6dfb63f67f1fb","IPY_MODEL_70fb33005cfc4036a5c86277e0a37ef1"],"layout":"IPY_MODEL_ffda08eb5f0a42de8b22a9944860d0a8"}},"4506c39a52c14230bce3f07f1c7591d1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0871251720014736894bd6c265f48913","placeholder":"тАЛ","style":"IPY_MODEL_4820a9ff78b142adba44d9a2c024ce75","value":"model.safetensors:тАЗ100%"}},"7cb8c8afaaf048f6b1f6dfb63f67f1fb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b74a81e7db2a4f62a7ec982e4cbd4179","max":1115567652,"min":0,"orientation":"horizontal","style":"IPY_MODEL_bae88cd61f5d49ccbf4ddb4471dab969","value":1115567652}},"70fb33005cfc4036a5c86277e0a37ef1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6fff9625a8746019610c53d744aabcd","placeholder":"тАЛ","style":"IPY_MODEL_32ca31645ba24ae48ff8fc474e1942a4","value":"тАЗ1.12G/1.12GтАЗ[00:09&lt;00:00,тАЗ153MB/s]"}},"ffda08eb5f0a42de8b22a9944860d0a8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0871251720014736894bd6c265f48913":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4820a9ff78b142adba44d9a2c024ce75":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b74a81e7db2a4f62a7ec982e4cbd4179":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bae88cd61f5d49ccbf4ddb4471dab969":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c6fff9625a8746019610c53d744aabcd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32ca31645ba24ae48ff8fc474e1942a4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}